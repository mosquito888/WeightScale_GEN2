@using WeightScaleGen2.BGC.Web.Common;
@model WeightScaleGen2.BGC.Models.ViewModels.WeightIn.ResultGetWeightInInfoViewModel;
@{
    ViewData["PageTitle"] = @ViewBag.MenuName;
}
@Html.AntiForgeryToken()
<div class="h-100">
    @* Header Section *@
    <div class="pageMenuTitle">
        <h3 class="text-black">ชั่งเข้า</h3>
    </div>

    <div id="dataContainerHeight" class="dataContainer weightStampInfo">

        <div class="flex flex-row items-center justify-start mb-3">
            <div>
                <button id="btnConfirmWeightIn" onclick="Save()" type="button" class="buttonAction primary-bg inline-flex items-center mr-3 d-none">
                    <lord-icon src="https://cdn.lordicon.com/vbmtnozn.json" trigger="hover" stroke="bold" colors="primary:#ffffff,secondary:#ffffff" style="width:20px;height:20px" class="mr-2"></lord-icon>
                    ยืนยัน
                </button>
                <button type="button" onclick="GoToIndex();" class="buttonAction primary-bg inline-flex items-center mr-3">
                    <lord-icon src="https://cdn.lordicon.com/jzzzcrxv.json" trigger="hover" stroke="bold" colors="primary:#ffffff,secondary:#ffffff" style="width:20px;height:20px" class="mr-2"></lord-icon>
                    กลับ
                </button>
            </div>
            <h4 class="dataTitle">ชั่งเข้า</h4>
        </div>

        <form id="formMainWH" class="needs-validation" novalidate>
            @Html.HiddenFor(x => x.mode, new { @id = "mode" })
            <div class="grid grid-cols-1 xl:grid-cols-2 gap-2 space-y-2">
                <div class="space-y-4">

                    <h4 class="text-black mb-2">ข้อมูลรถ</h4>
                    <div class="grid gap-2 grid-cols-12 rounded-lg shadow-sm p-4">
                        <div class="col-span-12 md:col-span-9">
                            <label for="car_license" class="d-block mb-2">ทะเบียนรถ</label>
                            @Html.TextBoxFor(x => x.car_license, new { @class = "border text-gray-900 block w-full p-2.5", @id = "car_license", @maxlength = "50", @required = true })
                        </div>
                        <div class="col-span-12 md:col-span-3 mt-auto">
                            <button type="button" onclick="WeightInByCarLicense();" class="buttonAction w-100 primary-bg inline-flex justify-content-center items-center rounded-sm" style="height: 43px;">
                                <img src="~/icons/search.svg" class="" />
                                ค้นหา
                            </button>
                        </div>
                        <div class="col-span-12 grid grid-cols-2 md:grid-cols-4 gap-1 sm:gap-2 md:gap-4 pt-2 px-0 md:px-8">
                            <div class="flex items-center">
                                <input checked id="car" type="radio" value="รถเดี่ยว" name="car_type" class="pointer-unset w-4.5 h-4.5">
                                <label for="car" class="cursor-pointer ps-1 sm:ps-2 mb-0 text-sm font-medium text-gray-900">รถเดี่ยว</label>
                            </div>
                            <div class="flex items-center">
                                <input id="trailer" type="radio" value="รถเทรลเลอร์" name="car_type" class="pointer-unset w-4.5 h-4.5">
                                <label for="trailer" class="cursor-pointer ps-1 sm:ps-2 mb-0 text-sm font-medium text-gray-900">รถเทรลเลอร์</label>
                            </div>
                            <div class="flex items-center">
                                <input id="caravan" type="radio" value="รถพ่วง" name="car_type" class="pointer-unset w-4.5 h-4.5">
                                <label for="caravan" class="cursor-pointer ps-1 sm:ps-2 mb-0 text-sm font-medium text-gray-900">รถพ่วง</label>
                            </div>
                            <div class="flex items-center">
                                <input id="other_car" type="radio" value="รถอื่นๆ" name="car_type" class="pointer-unset w-4.5 h-4.5">
                                <label for="other_car" class="cursor-pointer ps-1 sm:ps-2 mb-0 text-sm font-medium text-gray-900">รถอื่นๆ</label>
                            </div>
                        </div>
                    </div>

                    <h4 class="text-black mb-2">ข้อมูลการชั่ง</h4>
                    <div class="grid gap-2 grid-cols-1 md:grid-cols-2 rounded-lg shadow-sm p-4">
                        <div class="col-span-2 grid gap-2 grid-cols-12">
                            <div class="col-span-12 md:col-span-9">
                                <label for="document_po" class="d-block mb-2">เลขที่ PO</label>
                                @Html.TextBoxFor(x => x.document_po, new { @class = "border text-gray-900 block w-full p-2.5", @id = "document_po", @maxlength = "50", @required = true })
                            </div>
                            <div class="col-span-12 md:col-span-3 mt-auto">
                                <button type="button" onclick="CheckDocumentPO();" class="buttonAction w-100 primary-bg inline-flex justify-content-center items-center rounded-sm" style="height:43px;">
                                    <img src="~/icons/search.svg" class="" />
                                    ค้นหา
                                </button>
                            </div>
                        </div>
                        <div class="col-span-2 md:col-span-1">
                            <label for="line_number" class="d-block mb-2">Line Number</label>
                            @Html.TextBoxFor(x => x.line_number, new { @class = "border text-gray-900 block w-full p-2.5", @id = "line_number", @maxlength = "50", @value = "0", @required = true })
                        </div>
                        <div class="col-span-2 md:col-span-1">
                            <label for="document_ref" class="d-block mb-2">เลขที่เอกสาร</label>
                            @Html.TextBoxFor(x => x.document_ref, new { @class = "border text-gray-900 block w-full p-2.5", @id = "document_ref", @maxlength = "50", @required = true })
                        </div>
                        <div class="col-span-2">
                            <label for="item_code" class="d-block mb-2">สินค้า</label>
                            @Html.DropDownListFor(x => x.item_code, SelectListMethods.GetItemMaster(), Constants.SelectOption.SelectOne,
                            new
                            {
                                @class = "border text-gray-900 block w-full p-2.5 select2",
                                @id = "item_code",
                                @required = true,
                                @onchange = "CheckQtyPending()"
                            })
                        </div>
                        <div class="col-span-2 md:col-span-1">
                            <label for="supplier_code" class="d-block mb-2">ผู้ส่ง</label>
                            @Html.DropDownListFor(x => x.supplier_code, SelectListMethods.GetSupplier(), Constants.SelectOption.SelectOne,
                                                        new
                                                        {
                                                            @class = "border text-gray-900 block w-full p-2.5 select2",
                                                            @id = "supplier_code",
                                                            @required = true
                                                        })
                        </div>
                        <div class="col-span-2 md:col-span-1">
                            <label for="sender_id" class="d-block mb-2">ผู้ส่งสินค้า</label>
                            @Html.DropDownListFor(x => x.sender_id, SelectListMethods.GetSender(), Constants.SelectOption.SelectOne,
                                                        new
                                                        {
                                                            @class = "border text-gray-900 block w-full p-2.5 select2",
                                                            @id = "sender_id",
                                                            @required = true,
                                                        })
                        </div>
                    </div>

                    <h4 class="text-black mb-2">ข้อมูลเพิ่มเติม</h4>
                    <div class="grid gap-2 grid-cols-1 md:grid-cols-3 rounded-lg shadow-sm p-4">
                        <div class="col-span-1">
                            <label for="doc_send" class="d-block mb-2">ใบอนุญาตขนแร่</label>
                            @Html.TextBoxFor(x => x.doc_send, new { @class = "border text-gray-900 block w-full p-2.5", @id = "doc_send", @maxlength = "50", @required = true })
                        </div>
                        <div class="col-span-1">
                            <label for="doc_start" class="d-block mb-2">วันที่เริ่มต้น</label>
                            <div class="relative">
                                <lord-icon src="https://cdn.lordicon.com/uphbloed.json"
                                           trigger="hover"
                                           style="width: 20px; height: 20px;"
                                           colors="primary:#193cb8,secondary:#66d7ee"
                                           class="absolute top-1/2 right-2 transform -translate-y-1/2 w-6 h-6">
                                </lord-icon>
                                <input type="text" id="doc_start" placeholder="เลือกวันที่เริ่มต้น" class="border text-gray-900 block w-full p-2.5" />
                            </div>
                        </div>
                        <div class="col-span-1">
                            <label for="doc_stop" class="d-block mb-2">วันที่สิ้นสุด</label>
                            <div class="relative">
                                <lord-icon src="https://cdn.lordicon.com/uphbloed.json"
                                           trigger="hover"
                                           style="width: 20px; height: 20px;"
                                           colors="primary:#193cb8,secondary:#66d7ee"
                                           class="absolute top-1/2 right-2 transform -translate-y-1/2 w-6 h-6">
                                </lord-icon>
                                <input type="text" id="doc_stop" placeholder="เลือกวันที่สิ้นสุด" class="border text-gray-900 block w-full p-2.5" />
                            </div>
                        </div>
                    </div>
                </div>

                <div class="space-y-4">
                    <h4 class="text-black mb-2">น้ำหนักขณะชั่ง</h4>
                    <div class="grid gap-2 grid-cols-12 rounded-lg shadow-sm p-4">
                        <div class="col-span-12 md:col-span-9">
                            <label for="weight_in" class="d-block mb-2">น้ำหนักขณะชั่ง (KG)</label>
                            @Html.TextBoxFor(x => x.weight_in, new { @class = "border text-gray-900 block w-full p-2.5", @id = "weight_in", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                        </div>
                        <div class="col-span-12 md:col-span-3 mt-auto">
                            <button type="button" onclick="GetWeightIn()" class="buttonAction w-100 primary-bg inline-flex justify-content-center items-center rounded-sm" style="height: 43px;">
                                <img src="~/icons/weightin.svg" class="filter-invert-0" />
                                รับค่าน้ำหนัก
                            </button>
                        </div>
                    </div>

                    <div class="flex flex-row flex-wrap gap-2 items-center justify-between mb-2">
                        <h4 class="text-black mb-0">ประวัติการชั่งน้ำหนักเข้าและออก</h4>
                    </div>

                    <div class="grid gap-2 grid-cols-1 md:grid-cols-2 rounded-lg shadow-sm p-4">
                        <div class="col-span-2 flex justify-end">
                            <button type="button" onclick="HistoryWeight();" class="buttonAction w-180px primary-bg inline-flex justify-content-center items-center">
                                <i class="fa-solid fa-clock-rotate-left me-2"></i>
                                ประวัติการขนส่ง
                            </button>
                        </div>
                        <div class="col-span-1">
                            <label for="weight_in_0" class="d-block mb-2">น้ำหนักชั่งเข้าล่าสุด (KG)</label>
                            <input id="weight_in_0" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                        <div class="col-span-1">
                            <label for="weight_out_0" class="d-block mb-2">น้ำหนักชั่งออกล่าสุด (KG)</label>
                            <input id="weight_out_0" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                        <div class="col-span-1">
                            <label for="weight_in_1" class="d-block mb-2">น้ำหนักชั่งเข้าถัดไปครั้งที่ 1 (KG)</label>
                            <input id="weight_in_1" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                        <div class="col-span-1">
                            <label for="weight_out_1" class="d-block mb-2">น้ำหนักชั่งออกถัดไปครั้งที่ 1 (KG)</label>
                            <input id="weight_out_1" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                        <div class="col-span-1">
                            <label for="weight_in_2" class="d-block mb-2">น้ำหนักชั่งเข้าถัดไปครั้งที่ 2 (KG)</label>
                            <input id="weight_in_2" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                        <div class="col-span-1">
                            <label for="weight_out_2" class="d-block mb-2">น้ำหนักชั่งออกถัดไปครั้งที่ 2 (KG)</label>
                            <input id="weight_out_2" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                        <div class="col-span-1">
                            <label for="weight_in_3" class="d-block mb-2">น้ำหนักชั่งถัดไปครั้งที่ 3 (KG)</label>
                            <input id="weight_in_3" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                        <div class="col-span-1">
                            <label for="weight_out_3" class="d-block mb-2">น้ำหนักชั่งออกถัดไปครั้งที่ 3 (KG)</label>
                            <input id="weight_out_3" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                    </div>
                </div>

            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        $(function () {
            ConnectWeighingScale();
        });

        flatpickr('#doc_start', {
            locale: 'en',
            dateFormat: "d/m/Y",
        });

        flatpickr('#doc_stop', {
            locale: 'en',
            dateFormat: "d/m/Y",
        });

        $("#weight_in").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_in_0").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_out_0").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_in_1").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_out_1").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_in_2").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_out_2").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_in_3").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_out_3").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        function ConnectWeighingScale() {
            $.ajax({
                cache: false,
                async: true,
                type: "POST",
                url: '@Url.Action("GetConnectWeighingScale", "WeighingScale")',
                data: {},
                success: function (data) {
                if (data.status == '@Constants.Result.Success') {

                    var timerInterval
                    Swal.fire({
                        title: 'เชื่อมต่อเครื่องชั่งสำเร็จ !',
                        html: 'I will close in <strong></strong> seconds.',
                        timer: 1250,
                        icon: "success",
                        showCancelButton: false, // There won't be any cancel button
                        showConfirmButton: false, // There won't be any confirm button
                        buttonsStyling: false,
                        onBeforeOpen: function () {
                        Swal.showLoading()
                            timerInterval = setInterval(function () {
                            Swal.getContent().querySelector('strong')
                                .textContent = Swal.getTimerLeft()
                            }, 100)
                        },
                        onClose: function () {
                            clearInterval(timerInterval)
                        }
                        }).then(function (result) {
                            if (
                                // Read more about handling dismissals
                                result.dismiss === Swal.DismissReason.timer
                            ) {
                                console.log('หน้าต่างจะปิดในเวลา')
                            }
                            })

                } else {
                    var timerInterval
                    Swal.fire({
                        title: 'เชื่อมต่อเครื่องชั่งไม่สำเร็จ !',
                        html: 'I will close in <strong></strong> seconds.',
                        timer: 1250,
                        icon: "error",
                        showCancelButton: false, // There won't be any cancel button
                        showConfirmButton: false, // There won't be any confirm button
                        buttonsStyling: false,
                        onBeforeOpen: function () {
                        Swal.showLoading()
                            timerInterval = setInterval(function () {
                            Swal.getContent().querySelector('strong')
                                .textContent = Swal.getTimerLeft()
                            }, 100)
                        },
                        onClose: function () {
                            clearInterval(timerInterval)
                        }
                        }).then(function (result) {
                            if (
                                // Read more about handling dismissals
                                result.dismiss === Swal.DismissReason.timer
                            ) {
                                console.log('หน้าต่างจะปิดในเวลา')
                                GoToIndex();
                            }
                            })
                }
            },
            error: function (err) {
                toastr['error']('Fail', 'Warning!', ErrOpt);
            },
            complete: function (data) {
            }
            });
        }

        function WeightInByCarLicense() {
            $.ajax({
                cache: false,
                async: true,
                type: "POST",
                url: '@Url.Action("WeightInInfoByCarLicense", "WeightIn")',
                data: {
                    car_license : $('#car_license').val(),
                    car_type : $('input[name="car_type"]:checked').val()
                },
                success: function (data) {
                if (data.status == '@Constants.Result.Success') {
                    if(data.data.status == 'Active') {
                        Swal.fire({
                                        icon: 'error',
                                        title: 'คำเตือน',
                                        text: 'รถคันนี้ได้ถูกชั่งเข้าไปแล้ว',
                                        showCancelButton: false,
                                        confirmButtonColor: '#3085d6',
                                        confirmButtonText: 'ตกลง',
                                        confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                        buttonsStyling: false,
                        })
                        return;
                    }

                    var timerInterval
                    Swal.fire({
                        title: 'ค้นหาสำเร็จ !',
                        html: 'I will close in <strong></strong> seconds.',
                        timer: 750,
                        icon: "success",
                        showCancelButton: false, // There won't be any cancel button
                        showConfirmButton: false, // There won't be any confirm button
                        buttonsStyling: false,
                        onBeforeOpen: function () {
                        Swal.showLoading()
                            timerInterval = setInterval(function () {
                            Swal.getContent().querySelector('strong')
                                .textContent = Swal.getTimerLeft()
                            }, 100)
                        },
                        onClose: function () {
                            clearInterval(timerInterval)
                        }
                        }).then(function (result) {
                            if (
                                // Read more about handling dismissals
                                result.dismiss === Swal.DismissReason.timer
                            ) {
                                console.log('หน้าต่างจะปิดในเวลา')
                            }
                            })

                } else if (data.status == '@Constants.Result.Invalid' && data.car_license.length > 0) {
                    var timerInterval
                    Swal.fire({
                        title: 'ค้นหาสำเร็จ !',
                        html: 'I will close in <strong></strong> seconds.',
                        timer: 750,
                        icon: "success",
                        showCancelButton: false, // There won't be any cancel button
                        showConfirmButton: false, // There won't be any confirm button
                        buttonsStyling: false,
                        onBeforeOpen: function () {
                        Swal.showLoading()
                            timerInterval = setInterval(function () {
                            Swal.getContent().querySelector('strong')
                                .textContent = Swal.getTimerLeft()
                            }, 100)
                        },
                        onClose: function () {
                            clearInterval(timerInterval)
                        }
                        }).then(function (result) {
                            if (
                                // Read more about handling dismissals
                                result.dismiss === Swal.DismissReason.timer
                            ) {
                                console.log('หน้าต่างจะปิดในเวลา')
                            }
                            })
                } else {
                        Swal.fire({
                                        icon: 'error',
                                        title: 'คำเตือน',
                                        text: data.message,
                                        showCancelButton: false,
                                        confirmButtonColor: '#3085d6',
                                        confirmButtonText: 'ตกลง',
                                        confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                        buttonsStyling: false,
                        })
                        $('#btnConfirmWeightIn').addClass("d-none");
                        toastr['error']('Fail - ' + data.message, 'Warning!', ErrOpt);
                }
            },
            error: function (err) {
                toastr['error']('Fail', 'Warning!', ErrOpt);
            },
            complete: function (data) {
            }
            });
        }

        function HistoryWeight() {
            $.ajax({
                cache: false,
                async: true,
                type: "POST",
                url: '@Url.Action("WeightHistory", "WeightIn")',
                data: {
                    car_license : $('#car_license').val(),
                },
                success: function (data) {
                if (data.status == '@Constants.Result.Success') {
                    if(data.in_his_data && data.in_his_data.length > 0) {
                        for (let i = 0; i < data.in_his_data.length; i++) {
                            $('#weight_in_' + i).val(parseFloat(data.in_his_data[i].weight_in.toFixed(2)).toLocaleString());
                        }
                    }

                if(data.out_his_data && data.out_his_data.length > 0) {
                    for (let i = 0; i < data.out_his_data.length; i++) {
                        $('#weight_out_' + i).val(parseFloat(data.out_his_data[i].before_weight_out.toFixed(2)).toLocaleString());
                    }
                }

                            var timerInterval
                    Swal.fire({
                        title: 'ค้นหาสำเร็จ !',
                        html: 'I will close in <strong></strong> seconds.',
                        timer: 750,
                        icon: "success",
                        showCancelButton: false, // There won't be any cancel button
                        showConfirmButton: false, // There won't be any confirm button
                        buttonsStyling: false,
                        onBeforeOpen: function () {
                        Swal.showLoading()
                            timerInterval = setInterval(function () {
                            Swal.getContent().querySelector('strong')
                                .textContent = Swal.getTimerLeft()
                            }, 100)
                        },
                        onClose: function () {
                            clearInterval(timerInterval)
                        }
                        }).then(function (result) {
                            if (
                                // Read more about handling dismissals
                                result.dismiss === Swal.DismissReason.timer
                            ) {
                                console.log('หน้าต่างจะปิดในเวลา')
                            }
                            })
                } else if (data.status == '@Constants.Result.Invalid') {
                        Swal.fire({
                                        icon: 'error',
                                        title: 'คำเตือน',
                                        text: 'Data not Found',
                                        showCancelButton: false,
                                        confirmButtonColor: '#3085d6',
                                        confirmButtonText: 'ตกลง',
                                        confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                        buttonsStyling: false,
                        })
                } else {
                        Swal.fire({
                                        icon: 'error',
                                        title: 'คำเตือน',
                                        text: data.message,
                                        showCancelButton: false,
                                        confirmButtonColor: '#3085d6',
                                        confirmButtonText: 'ตกลง',
                                        confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                        buttonsStyling: false,
                        })
                        toastr['error']('Fail - ' + data.message, 'Warning!', ErrOpt);
                }
            },
            error: function (err) {
                toastr['error']('Fail', 'Warning!', ErrOpt);
            },
            complete: function (data) {
            }
            });
        }

        function GoToIndex() {
            window.location.href = '@Url.Action("Index", "WeightIn")';
        }

        function CheckDocumentPO() {
        if($('#document_po').val() == '-') 
        {
            Swal.fire({
                icon: 'success',
                title: 'ตรวจสอบ Qty Pending สำเร็จ !',
                text: 'รับโดยไม่ระบุ PO',
                showCancelButton: false,
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'ตกลง',
                confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                buttonsStyling: false,
            })
            $('#btnConfirmWeightIn').removeClass("d-none");
        }

        $.ajax({
                        cache: false,
                        async: true,
                        type: "POST",
                        url: '@Url.Action("DocumentPOInfo", "DocumentPO")',
                        data: {
                            purchase_number : $('#document_po').val(),
                        },
                        success: function (data) {
                        if (data.status == '@Constants.Result.Success' && data.data.dlv_complete != 'X' && data.data.status != 'L') {
                        $('#item_code').val(data.data.material_code).trigger('change');
                        $('#supplier_code').val(data.data.vender_code).trigger('change');
                        $('#line_number').val(data.data.num_of_rec);

                                    var timerInterval
                            Swal.fire({
                                title: 'ค้นหาเอกสาร PO สำเร็จ !',
                                html: 'I will close in <strong></strong> seconds.',
                                timer: 750,
                                icon: "success",
                                showCancelButton: false, // There won't be any cancel button
                                showConfirmButton: false, // There won't be any confirm button
                                buttonsStyling: false,
                                onBeforeOpen: function () {
                                Swal.showLoading()
                                    timerInterval = setInterval(function () {
                                    Swal.getContent().querySelector('strong')
                                        .textContent = Swal.getTimerLeft()
                                    }, 100)
                                },
                                onClose: function () {
                                    clearInterval(timerInterval)
                                }
                                }).then(function (result) {
                                    if (
                                        // Read more about handling dismissals
                                        result.dismiss === Swal.DismissReason.timer
                                    ) {
                                        console.log('หน้าต่างจะปิดในเวลา')
                                    }
                                    })
                        CheckQtyPending();
                        } else if (data.status == '@Constants.Result.Invalid') {
                                Swal.fire({
                                                icon: 'error',
                                                title: 'คำเตือน',
                                                text: data.message,
                                                showCancelButton: false,
                                                confirmButtonColor: '#3085d6',
                                                confirmButtonText: 'ตกลง',
                                                confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                                buttonsStyling: false,
                                })
                        } else {
                                Swal.fire({
                                                icon: 'error',
                                                title: 'คำเตือน',
                                                text: 'Data not Found',
                                                showCancelButton: false,
                                                confirmButtonColor: '#3085d6',
                                                confirmButtonText: 'ตกลง',
                                                confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                                buttonsStyling: false,
                                })
                                toastr['error']('Fail - ' + data.message, 'Warning!', ErrOpt);
                        }
                    },
                    error: function (err) {
                        toastr['error']('Fail', 'Warning!', ErrOpt);
                    },
                    complete: function (data) {
                    }
                    });
                }

        function CheckQtyPending() {
        $.ajax({
                        cache: false,
                        async: true,
                        type: "POST",
                        url: '@Url.Action("CheckQtyPendingDocumentPO", "DocumentPO")',
                        data: {
                            document_po : $('#document_po').val(),
                            material_code : $('#item_code').val(),
                            line_number : $('#line_number').val(),
                        },
                        success: function (data) {
                        var message = '';

                        data.message.forEach(function(item) {
                            message += item + '<br>';
                        });
                        if (data.status == '@Constants.Result.Success' && data.message.length <= 2) {
                                Swal.fire({
                                                icon: 'success',
                                                title: 'ตรวจสอบ Qty Pending สำเร็จ !',
                                                html: message,
                                                showCancelButton: false,
                                                confirmButtonColor: '#3085d6',
                                                confirmButtonText: 'ตกลง',
                                                confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                                buttonsStyling: false,
                                })
                        $('#btnConfirmWeightIn').removeClass("d-none");
                        } else if (data.status == '@Constants.Result.Invalid') {
                                Swal.fire({
                                                icon: 'error',
                                                title: 'คำเตือน',
                                                html: message,
                                                showCancelButton: false,
                                                confirmButtonColor: '#3085d6',
                                                confirmButtonText: 'ตกลง',
                                                confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                                buttonsStyling: false,
                                })
                        } else {
                                Swal.fire({
                                                icon: 'error',
                                                title: 'คำเตือน',
                                                html: message,
                                                showCancelButton: false,
                                                confirmButtonColor: '#3085d6',
                                                confirmButtonText: 'ตกลง',
                                                confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                                buttonsStyling: false,
                                })
                                toastr['error']('Fail - ' + data.message, 'Warning!', ErrOpt);
                        }
                    },
                    error: function (err) {
                        toastr['error']('Fail', 'Warning!', ErrOpt);
                    },
                    complete: function (data) {
                    }
                    });
                }

        function GetWeightIn() {
            $.ajax({
                cache: false,
                async: true,
                type: "POST",
                url: '@Url.Action("GetWeightByWeighingScale", "WeighingScale")',
                data: {},
                success: function (data) {
                if (data.status == '@Constants.Result.Success') {

                    var timerInterval
                    Swal.fire({
                        title: 'เชื่อมต่อเครื่องชั่งสำเร็จ !',
                        html: 'I will close in <strong></strong> seconds.',
                        timer: 1250,
                        icon: "success",
                        showCancelButton: false, // There won't be any cancel button
                        showConfirmButton: false, // There won't be any confirm button
                        buttonsStyling: false,
                        onBeforeOpen: function () {
                        Swal.showLoading()
                            timerInterval = setInterval(function () {
                            Swal.getContent().querySelector('strong')
                                .textContent = Swal.getTimerLeft()
                            }, 100)
                        },
                        onClose: function () {
                            clearInterval(timerInterval)
                        }
                        }).then(function (result) {
                            if (
                                // Read more about handling dismissals
                                result.dismiss === Swal.DismissReason.timer
                            ) {
                                console.log('หน้าต่างจะปิดในเวลา')
                                $('#weight_in').val(data.data);
                            }
                            })

                } else {
                    var timerInterval
                    Swal.fire({
                        title: 'เชื่อมต่อเครื่องชั่งไม่สำเร็จ !',
                        html: 'I will close in <strong></strong> seconds.',
                        timer: 1250,
                        icon: "error",
                        showCancelButton: false, // There won't be any cancel button
                        showConfirmButton: false, // There won't be any confirm button
                        buttonsStyling: false,
                        onBeforeOpen: function () {
                        Swal.showLoading()
                            timerInterval = setInterval(function () {
                            Swal.getContent().querySelector('strong')
                                .textContent = Swal.getTimerLeft()
                            }, 100)
                        },
                        onClose: function () {
                            clearInterval(timerInterval)
                        }
                        }).then(function (result) {
                            if (
                                // Read more about handling dismissals
                                result.dismiss === Swal.DismissReason.timer
                            ) {
                                console.log('หน้าต่างจะปิดในเวลา')
                            }
                            })
                }
            },
            error: function (err) {
                toastr['error']('Fail', 'Warning!', ErrOpt);
            },
            complete: function (data) {
            }
            });
        }

        function ValidateFormMain() {
            if (!$('#formMainWH')[0].checkValidity() || $('#weight_in').val() == '0.00') {
                Swal.fire({
                    title: 'คำเตือน',
                    text: 'กรุณากรอกข้อมูลให้ครบถ้วน !',
                    icon: 'error',
                    showCancelButton: false,
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'ตกลง',
                    confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                    buttonsStyling: false,
                })
                return false;
            } else {
                return true;
            }
        }

        function Save() {
            var validFormMain = ValidateFormMain();
            if (validFormMain) {
                RealSaveInfo();
            }
        }

        function RealSaveInfo() {

            var param = {};
            param.mode = $('#mode').val();
            param.line_number = $('#line_number').val();
            param.item_code = $('#item_code').val();
            param.supplier_code = $('#supplier_code').val();
            param.car_license = $('#car_license').val();
            param.car_type = $('input[name="car_type"]:checked').val();
            param.document_po = $('#document_po').val();
            param.doc_type_po = $('#line_number').val();
            param.document_ref = $('#document_ref').val();
            param.weight_in = $('#weight_in').val();
            param.doc_start = StringToDate($('#doc_start').val());
            param.doc_stop = StringToDate($('#doc_stop').val());
            param.doc_send = $('#doc_send').val();
            param.sender_id = $('#sender_id').val();

            Swal.fire({
                title: 'ยืนยันการสร้างใบชั่งเข้า ?',
                text: '',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'ยืนยัน',
                cancelButtonText: 'ยกเลิก',
                confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                cancelButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-danger shadow-sm ml-1',
                buttonsStyling: false,
            }).then(function (result) {
                if (result.value) {
                    $.ajax({
                        cache: false,
                        async: true,
                        type: "POST",
                        url: '@Url.Action("SaveWeightInInfo", "WeightIn")',
                        data: param,
                        success: function (data) {
                            if (data.status == '@Constants.Result.Success') {
                                PrintItem(data.id);
                                var timerInterval
                                Swal.fire({
                                    title: 'บันทึกสำเร็จ !',
                                    html: 'I will close in <strong></strong> seconds.',
                                    timer: 750,
                                    icon: "success",
                                    showCancelButton: false, // There won't be any cancel button
                                    showConfirmButton: false, // There won't be any confirm button
                                    buttonsStyling: false,
                                    onBeforeOpen: function () {
                                        Swal.showLoading()
                                        timerInterval = setInterval(function () {
                                            Swal.getContent().querySelector('strong')
                                                .textContent = Swal.getTimerLeft()
                                        }, 100)
                                    },
                                    onClose: function () {
                                        clearInterval(timerInterval)
                                    }
                                }).then(function (result) {
                                    if (
                                        // Read more about handling dismissals
                                        result.dismiss === Swal.DismissReason.timer
                                    ) {
                                        console.log('หน้าต่างจะปิดในเวลา')
                                        GoToIndex();
                                    }
                                })
                            } else if (data.status == '@Constants.Result.Invalid') {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'คำเตือน',
                                    text: data.message,
                                    showCancelButton: false,
                                    confirmButtonColor: '#3085d6',
                                    confirmButtonText: 'ตกลง',
                                    confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                    buttonsStyling: false,
                                })
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'คำเตือน',
                                    text: data.message,
                                    showCancelButton: false,
                                    confirmButtonColor: '#3085d6',
                                    confirmButtonText: 'ตกลง',
                                    confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                    buttonsStyling: false,
                                })
                                toastr['error']('Fail - ' + data.message, 'Warning!', ErrOpt);
                            }
                        },
                        error: function (err) {
                            toastr['error']('Fail', 'Warning!', ErrOpt);
                        },
                        complete: function (data) {
                        }
                    });
                }
            })
        }

        function PrintItem(id) {
            window.open('@Url.Action("ActionPrintPdfWeightInInfo", "WeightIn")?id=' + id, '_blank');
        }

        function StringToDate(date) {
            if (!date) return "";
            const [day, month, year] = date.split('/');
            return `${year}-${month}-${day}`;
        }
    </script>
}