@using WeightScaleGen2.BGC.Web.Common
@model WeightScaleGen2.BGC.Models.ViewModels.WeightIn.ParamSearchWeightInViewModel
@{
    ViewData["PageTitle"] = @ViewBag.MenuName;
}
@Html.AntiForgeryToken()
<div class="h-100">
    @* Header Section *@
    <div class="pageMenuTitle">
        <h3 class="text-black">ชั่งเข้า</h3>
    </div>

    <div id="dataContainerHeight" class="dataContainer">

        <div class="flex flex-row items-center justify-between mb-3 flex-wrap gap-2">
            <h4 class="dataTitle">ชั่งเข้า</h4>
            <div>
                <button type="button" onclick="WeightInProcess()" class="buttonAction primary-bg inline-flex items-center me-2">
                    @* <i class="fa-solid fa-upload me-2"></i> *@
                    <img src="~/icons/weightin.svg" class="mr-2" style="filter:invert(0)" />
                    ชั่งเข้า
                </button>
                <button type="button" onclick="ExportExcel()" class="buttonAction second-bg inline-flex items-center">
                    @* <i class="fa-solid fa-file-excel me-2"></i> *@
                    <img src="~/icons/excel.svg" class="" />
                    ดาวน์โหลด
                </button>
            </div>
        </div>

        @* Search Section *@
        <div class="w-full p-4 bg-white border border-gray-200 rounded-lg shadow-sm mb-2">
            <div class="grid grid-cols-1 mb-2">
                <div>
                    <label for="weight_in_no" class="d-block mb-2">Weight In No.</label>
                    <input type="text" id="weight_in_no" class="border text-gray-900 block w-full p-2.5" placeholder="Weight In Number" required />
                </div>
            </div>

            <div class="flex justify-content-center gap-2 flex-wrap">
                <button type="button" onclick="Search()" class="buttonAction w-150px primary-bg inline-flex justify-content-center items-center">
                    <img src="~/icons/search.svg" class="" />ค้นหา
                </button>
                <button type="button" onclick="Clear()" class="buttonAction w-150px third-bg inline-flex justify-content-center items-center">
                    <img src="~/icons/close.svg" class="" />เคลียร์
                </button>
            </div>

        </div>


        @* Table Section *@
        <div class="relative overflow-x-auto shadow-sm rounded-lg border border-gray-200 p-4">
            <table id="data-list" class="w-full text-md text-left rtl:text-right text-gray-700">
                <thead class="text-white uppercase">
                    <tr>
                        <th class="text-center">
                            Action
                        </th>
                        <th class="text-center">
                            เลขที่ใบชั่งเข้า
                        </th>
                        <th class="text-center">
                            รหัสสินค้า
                        </th>
                        <th class="text-center">
                            ชื่อสินค้า
                        </th>
                        <th class="text-center">
                            ประเภทรถ
                        </th>
                        <th class="text-center">
                            ทะเบียนรถ
                        </th>
                        <th class="text-center">
                            รหัสผู้ส่ง
                        </th>
                        <th class="text-center">
                            น้ำหนัก
                        </th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(function () {
            Search();
        });

        var t
        var searchParam;
        var fromSearch = true;
        $(function () {
            Swal.fire({
                title: 'รอสักครู่...',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading()
                },
            });

            SearchPage.init({
                url: '@Url.RouteUrl("SearchData")',
                info_page_url: '@Url.RouteUrl("SearchData")',
                tableId: "data-list"
            });
            setTimeout(function () { Swal.close(); }, 1000);
            });

            var SearchPage = function () {
                var tableList;  // actual table jquery object
                var opts;       // all param object
                var initDataTable = function () {
                t = tableList.DataTable({
                                    ajax: {
                                        url: '@Url.Action("SearchData", "WeightIn")',
                                        type: "POST",
                                        data: function (d) {
                                            return $.extend({}, d, {
                                                "weight_in_no": $('#weight_in_no').val()
                                            });
                                        },
                                        dataType: "json",
                                        error: function (jqXhr, txtStatus, errorThrown) {
                                            if (typeof console === "object") {
                                                console.log("Code: " + jqXhr.status);
                                                console.log("Status: " + txtStatus);
                                                console.log("Error Thrown: " + errorThrown);
                                            }
                                        }
                                    },
                                    ordering: false,
                                    // scrollX: true,
                                    // scrollY: "calc(100vh - 300px)",
                                    deferRender: true,
                                    iDisplayLength: 10,
                                    paging: true,
                                    serverSide: true,
                                    autoWidth: false,
                                    searching: false,
                                    info: true,
                                    language: {
                                        paginate: {
                                            first: 'หน้าแรก',
                                            last: 'หน้าสุดท้าย',
                                            next: 'ถัดไป →',
                                            previous: '← ก่อนหน้า'
                                        },
                                        info: "แสดง _START_ ถึง _END_ จากทั้งหมด _TOTAL_ รายการ",
                                        infoEmpty: "ไม่มีข้อมูลที่จะแสดง",
                                        lengthMenu: "แสดง _MENU_ รายการ",
                                        infoFiltered: "(กรองจากทั้งหมด _MAX_ รายการ)",
                                        zeroRecords: "ไม่พบข้อมูลที่ค้นหา",
                                        processing: "รอสักครู่..."
                                    },
                                    preDrawCallback: function (settings) {
                                        Swal.fire({
                                            title: 'รอสักครู่...',
                                            allowOutsideClick: false,
                                            didOpen: () => {
                                                Swal.showLoading()
                                            },
                                        });
                                    },
                                    drawCallback: function (settings) {
                                        Swal.close();
                                    },
                                    columns: [
                                        {
                                            data: function (data, type, dataToSet) {
                                                return data.id;
                                            },
                                            name: "id",
                                            orderable: false,
                                            render: renderCol_Action
                                        },
                                        { data: "weight_in_no", name: "weight_in_no", className: "text-center p-4", orderable: false },
                                        { data: "item_code", name: "item_code", className: "text-center p-4", orderable: false },
                                        { data: "item_name", name: "item_name", className: "text-center p-4", orderable: false },
                                        { data: "car_type", name: "car_type", className: "text-center p-4", orderable: false },
                                        { data: "car_license", name: "car_license", className: "text-center p-4", orderable: false },
                                        { data: "supplier_code", name: "supplier_code", className: "text-center p-4", orderable: false },
                                        { data: "weight_in", name: "weight_in", className: "text-center p-0", orderable: false }
                                    ]
                                    //order: [[1, "asc"]]
                                });
                };

                var renderCol_Action = function (data, type, row, meta) {
                    var response = '<div class="flex flex-row items-center justify-center gap-2">';
                    var aView = '<button type="button" onclick="EditItem(' + '\'' + data + '\'' + ');" class="buttonAction actionIconButton primary-bg"><lord-icon src="https://cdn.lordicon.com/exymduqj.json" trigger="hover" stroke="bold" colors="primary:#ffffff,secondary:#ffffff" style="width:20px;height:20px"></lord-icon></button>';
                        aView += '<button type="button" onclick="PrintItem(' + '\'' + data + '\'' + ');" class="buttonAction actionIconButton lightWhite-bg printIcon-i"><i class="fa-solid fa-print"></i></button>';
                    response += aView;
                    response += '</div>';

                    return response;
                };

                var renderCol_Date_EN = function (data, type, row, meta) {
                    if (data == null)
                        return "";
                    let d = moment(data);
                    return d.format('DD') + '/' + d.format('MM') + '/' + d.format('YYYY');
                };

                var renderCol_DateTime_EN = function (data, type, row, meta) {
                    if (data == null)
                        return "";
                    let d = moment(data);
                    return d.format('DD') + '/' + d.format('MM') + '/' + d.format('YYYY') + ' ' + d.format('HH') + ':' + d.format('mm') + ':' + d.format('ss');
                };

                var renderCol_Date_TH = function (data, type, row, meta) {
                    if (data == null)
                        return "";
                    let d = moment(data);
                    return d.format('MM') + '/' + d.format('DD') + '/' + d.add(543, 'y').format('YYYY');
                };

                var renderCol_DateTime_TH = function (data, type, row, meta) {
                    if (data == null)
                        return "";
                    let d = moment(data);
                    return d.format('MM') + '/' + d.format('DD') + '/' + d.add(543, 'y').format('YYYY') + ' ' + d.format('HH') + ':' + d.format('mm') + ':' + d.format('ss');
                };

                var reloadTable = function () {
                    if (tableList) {
                        tableList.DataTable().ajax.reload();
                    }
                };

                return {
                    init: function (options) {
                        opts = $.extend({
                            ajaxUrl_GetList: '@Url.Action("SearchData", "WeightIn")',
                            redirectUrl_InfoPage: options.info_page_url,
                            updateRole: options.info_page_url,
                            table: []
                            }, options);
                            tableList = $("#" + opts.tableId);
                            initDataTable();
                            },
                            reloadTableAjax: function () {
                                reloadTable();
                            }
                };
            }();

        function Search() {
            fromSearch = true;
            SearchPage.reloadTableAjax();
        }

        function Clear() {
            $('#weight_in_no').val("");
        }

        function WeightInProcess() {
            window.location.href = '@Url.Action("WeightInProcess", "WeightIn")';
        }

        function EditItem(id) {
            var url = '@Url.Action("WeightInInfo", "WeightIn")' +
            '?mode=' + '@Constants.Mode.Updated' +
            '&id=' + id;
            window.location.href = url;
        }

            function ExportExcel() {

                Swal.fire({
                    title: 'กำลังส่งออกข้อมูล',
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading()
                    },
                });

                $.ajax({
                    url: '@Url.Action("ActionCreateExcelFile", "WeightIn")',
                    type: 'POST',
                    dataType: 'json',
                    data: {
                        'weight_in_no': $('#weight_in_no').val()
                    },
                    success: function (data) {
                        if (data.status == '@Constants.Result.Success') {
                            OpenExcel(data.path, data.fileName);
                            Swal.fire({
                                title: 'ส่งออกไฟล์สำเร็จ',
                                html: 'I will close in <strong></strong> seconds.',
                                timer: 2000,
                                icon: "success",
                                showCancelButton: false, // There won't be any cancel button
                                showConfirmButton: false, // There won't be any confirm button
                                // confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                buttonsStyling: false,
                                onBeforeOpen: function () {
                                    Swal.showLoading()
                                    timerInterval = setInterval(function () {
                                        Swal.getContent().querySelector('strong')
                                            .textContent = Swal.getTimerLeft()
                                    }, 100)
                                },
                                onClose: function () {
                                    clearInterval(timerInterval)
                                }
                            }).then(function (result) {
                                if (
                                    // Read more about handling dismissals
                                    result.dismiss === Swal.DismissReason.timer
                                ) {
                                    clearModal();
                                    Search();
                                }
                            })
                        } else if (data.status == '@Constants.Result.Invalid') {
                            Swal.fire({
                                icon: 'error',
                                title: 'คำเตือน',
                                text: data.message,
                                showCancelButton: false,
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: 'ตกลง',
                                confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                buttonsStyling: false,
                            })
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'คำเตือน',
                                text: data.message,
                                showCancelButton: false,
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: 'ตกลง',
                                confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                buttonsStyling: false,
                            })
                            toastr['error']('Fail - ' + data.message, 'Warning!', ErrOpt);
                        }
                    },
                    error: function () {
                        toastr['error']('Fail', 'Warning!', ErrOpt);
                    }
                });
            }

            function OpenExcel(path, fileName) {
                var url = '@Url.Action("ActionOpenFileExcel", "WeightIn")' +
                    '?path=' + path +
                    '&fileName=' + fileName;
                window.open(url, '_blank');
            }

            function PrintItem(id) {
                window.open('@Url.Action("ActionPrintPdfWeightInInfo", "WeightIn")?id=' + id, '_blank');
            }
    </script>
}