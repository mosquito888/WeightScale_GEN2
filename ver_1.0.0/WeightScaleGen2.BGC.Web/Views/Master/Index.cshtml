@using WeightScaleGen2.BGC.Web.Common;
@model WeightScaleGen2.BGC.Models.ViewModels.Master.ParamSearchMasterViewModel
@{
    ViewData["PageTitle"] = @ViewBag.MenuName;
}
@Html.AntiForgeryToken()
<div>
    @* Header Section *@
    <div class="flex flex-row items-center justify-between mb-4">
        <h3 class="text-black">Master</h3>
        <div>
            <button type="button" id="btnCreate" onclick="CreateItem()" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm p-2.5 text-center inline-flex items-center me-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
                <i class="fa-solid fa-plus me-2"></i>
                Create Master
            </button>
            <button type="button" id="btnExport" onclick="ExportExcel()" class="text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm p-2.5 text-center inline-flex items-center me-2 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800">
                <i class="fa-solid fa-file-excel me-2"></i>
                Export
            </button>
        </div>
    </div>

    @* Search Section *@
    <div class="w-full p-4 bg-white border border-gray-200 rounded-lg shadow-sm sm:p-6 md:p-8 dark:bg-gray-800 dark:border-gray-700 mb-4">
        <div class="grid grid-cols-1 md:grid-cols-3 space-x-2 mb-4">
            <div>
                <label for="inputMasterType" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Master Type</label>
                @Html.DropDownListFor(x => x.master_type, SelectListMethods.GetMasterType(), Constants.SelectOption.SelectOne,
                         new
                         {
                             @class = "border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500",
                             @id = "inputMasterType",
                         })
            </div>
            <div>
                <label for="inputMasterCode" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Master Code</label>
                <input type="text" class="border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" id="inputMasterCode">
            </div>
            <div>
                <label for="inputMasterValue" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Master Value</label>
                <input type="text" class="border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" id="inputMasterValue">
            </div>
        </div>
        <div class="flex flex-row items-center justify-center">
            <button type="button" id="btnSearch" onclick="Search()" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 mr-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800">Search</button>
            <button type="button" id="btnClear" onclick="Clear()" class="text-gray-900 bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-100 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-gray-800 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700">Clear</button>
        </div>
    </div>

    @* Table Section *@
    <div class="relative overflow-x-auto shadow-sm sm:rounded-lg border border-gray-200 p-4">
        <table id="data-list" class="w-full text-md text-left rtl:text-right text-gray-700 dark:text-gray-400">
            <thead class="text-white uppercase bg-blue-900 dark:bg-gray-700 dark:text-gray-400">
                <tr>
                    <th class="text-center">Action</th>
                    <th class="text-center">Master Type</th>
                    <th class="text-center">Master Code</th>
                    <th class="text-center">Master Value</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

@section Scripts{
    <script>

        $(document).on('keypress',function(e) {
            if(e.which == 13) {
                Search();
            }
        });

        $(document).ready(function () {
            $("#btn-search").click(function () {
                OpenSearch();
            });
            $("#search-header").click(function () {
                OpenSearch();
            });
        });

        function OpenSearch() {
            event.stopPropagation();
            $("#search-body").slideToggle("slow", function () {
                var isVisible = $(this).is(":visible");
                var iconClass = isVisible ? "fa-caret-up" : "fa-caret-down";
                $("#btn-search i").removeClass().addClass("fa-solid " + iconClass);
            });
        }

        var t
        var searchParam;
        var fromSearch = true;
        $(function () {
            Swal.fire({
                title: 'รอสักครู่...',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading()
                },
            });
            SetPermssion();
            SearchPage.init({
                url: '@Url.RouteUrl("SearchData")',
                info_page_url: '@Url.RouteUrl("SearchData")',
                tableId: "data-list"
            });
            setTimeout(function () { Swal.close(); }, 1000);
        });

        function SetPermssion() {
            if ('@ViewBag.created' == 'N') {
                $('#btnCreate').hide();
            }
        }

        var SearchPage = function () {
            var tableList;  // actual table jquery object
            var opts;       // all param object
            var initDataTable = function () {
                t = tableList.DataTable({
                    ajax: {
                        url: '@Url.Action("SearchData", "Master")',
                        type: "POST",
                        data: function (d) {
                            return $.extend({}, d, {
                                "master_type": $('#inputMasterType').val(),
                                "master_code": $('#inputMasterCode').val(),
                                "master_value1": $('#inputMasterValue').val()
                            });
                        },
                        dataType: "json",
                        error: function (jqXhr, txtStatus, errorThrown) {
                            if (typeof console === "object") {
                                console.log("Code: " + jqXhr.status);
                                console.log("Status: " + txtStatus);
                                console.log("Error Thrown: " + errorThrown);
                            }
                        }
                    },
                    ordering: false,
                    // scrollX: true,
                    // scrollY: "calc(100vh - 300px)",
                    deferRender: true,
                    iDisplayLength: 10,
                    paging: true,
                    serverSide: true,
                    autoWidth: false,
                    searching: false,
                    info: true,
                    // dom: '<"flex flex-wrap items-center gap-3 mb-3 view-filter"<"w-full sm:w-auto"<"mr-3"l><"mr-3"f>>>' + 't' + '<"flex justify-center mt-3 view-pager"<"w-full sm:w-auto"ip>>',
                    language: {
                        paginate: {
                            first: 'หน้าแรก',
                            last: 'หน้าสุดท้าย',
                            next: 'ถัดไป →',
                            previous: '← ก่อนหน้า'
                        },
                        info: "แสดง _START_ ถึง _END_ จากทั้งหมด _TOTAL_ รายการ",
                        infoEmpty: "ไม่มีข้อมูลที่จะแสดง",
                        lengthMenu: "แสดง _MENU_ รายการ",
                        infoFiltered: "(กรองจากทั้งหมด _MAX_ รายการ)",
                        zeroRecords: "ไม่พบข้อมูลที่ค้นหา",
                        processing: "รอสักครู่..."
                    },
                    preDrawCallback: function (settings) {
                        Swal.fire({
                            title: 'รอสักครู่...',
                            allowOutsideClick: false,
                            didOpen: () => {
                                Swal.showLoading()
                            },
                        });
                    },
                    drawCallback: function (settings) {
                        Swal.close();
                    },
                    columns: [
                        {
                            data: function (data, type, dataToSet) {
                                return data.master_type + "," + data.master_code + "," + data.is_not_edit + "," + data.is_not_del;
                            },
                            name: "master_code",
                            className: "text-center",
                            orderable: false,
                            render: renderCol_Action
                        },
                        { data: "master_type_desc", name: "master_type_desc", className: "text-center p-4", orderable: false },
                        { data: "master_code", name: "master_code", className: "text-center p-4", orderable: false },
                        { data: "master_value1", name: "master_value1", className: "text-center p-4", orderable: false },
                    ],
                    //order: [[1, "asc"]]
                });
            };

            var renderCol_Action = function (data, type, row, meta) {
                var response = '<div class="flex flex-row items-center justify-center">';
                var mode = '@Constants.Mode.Updated';

                let paramTxt = data;
                const paramArray = paramTxt.split(",");

                if (paramArray[2] != 'Y') {
                    if ('@ViewBag.edit' == 'Y') {
                        if (data) {
                            var aView = '<button type="button" onclick="EditItem(' + '\'' + data + '\'' + ');" class="text-white bg-blue-700 hover:bg-blue-500 focus:outline-none focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm p-2.5 text-center me-2 mb-2 mr-2 dark:focus:ring-blue-900"><lord-icon src="https://cdn.lordicon.com/exymduqj.json" trigger="hover" stroke="bold" colors="primary:#ffffff,secondary:#ffffff" style="width:20px;height:20px"></lord-icon></button>';
                            response += aView;
                        }
                    }
                }                

                if (paramArray[3] != 'Y') {
                    if ('@ViewBag.deleted' == 'Y') {
                        if (data) {
                            var aView = '<button type="button" onclick="Deleted(' + '\'' + data + '\'' + ');" class="text-blue-700 hover:text-white border border-blue-700 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm p-2.5 text-center me-2 mb-2 dark:border-blue-500 dark:text-blue-500 dark:hover:text-white dark:hover:bg-blue-500 dark:focus:ring-blue-800"><lord-icon src="https://cdn.lordicon.com/xyfswyxf.json" trigger="hover" colors="primary:#1447e6" style="width:20px;height:20px"></lord-icon></button>';
                            response += aView;
                        }
                    }
                }

                response += '</div>';
                return response;
            };

            var reloadTable = function () {
                if (tableList) {
                    tableList.DataTable().ajax.reload();
                }
            };

            return {
                init: function (options) {
                    opts = $.extend({
                        ajaxUrl_GetList: '@Url.Action("SearchData", "Master")',
                        redirectUrl_InfoPage: options.info_page_url,
                        updateRole: options.info_page_url,
                        table: []
                    }, options);
                    tableList = $("#" + opts.tableId);
                    initDataTable();
                },
                reloadTableAjax: function () {
                    reloadTable();
                }
            };
        }();

        function Search() {
            fromSearch = true;
            SearchPage.reloadTableAjax();
        }

        function Clear() {
            $('#inputMasterType').val("");
            $('#inputMasterCode').val("");
            $('#inputMasterValue').val("");
        }

        function EditItem(paramItemId) {
            var url = '@Url.Action("MasterInfo", "Master")' +
            '?itemId=' + paramItemId + '&mode=' + '@Constants.Mode.Updated'
            window.location.href = url;
        }

        function CreateItem(itemId) {
            window.location.href = '@Url.Action("MasterInfo", "Master", new { itemId = "", mode = Constants.Mode.Created })';
        }

        function Deleted(data) {
            console.log(data);
            Swal.fire({
                title: 'ยืนยันการลบข้อมูล ?',
                text: '',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'ยืนยัน',
                cancelButtonText: 'ยกเลิก',
                confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                cancelButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-danger shadow-sm ml-1',
                buttonsStyling: false,
            }).then(function (result) {
                if (result.value) {

                    var _code = data;

                    $.ajax({
                        cache: false,
                        async: true,
                        type: "POST",
                        url: '@Url.Action("DeleteItem", "Master")',
                        data: {
                            itemId: _code,
                        },
                        success: function (data) {
                            if (data.status == '@Constants.Result.Success') {
                                var timerInterval
                                Swal.fire({
                                    title: 'ลบข้อมูลสำเร็จ !',
                                    html: 'I will close in <strong></strong> seconds.',
                                    timer: 750,
                                    icon: "success",
                                    showCancelButton: false, // There won't be any cancel button
                                    showConfirmButton: false, // There won't be any confirm button
                                    buttonsStyling: false,
                                    onBeforeOpen: function () {
                                        Swal.showLoading()
                                        timerInterval = setInterval(function () {
                                            Swal.getContent().querySelector('strong')
                                                .textContent = Swal.getTimerLeft()
                                        }, 100)
                                    },
                                    onClose: function () {
                                        clearInterval(timerInterval)
                                    }
                                }).then(function (result) {
                                    if (
                                        // Read more about handling dismissals
                                        result.dismiss === Swal.DismissReason.timer
                                    ) {
                                        console.log('หน้าต่างจะปิดในเวลา')
                                        Search();
                                    }
                                })
                            } else if (data.status == '@Constants.Result.Invalid') {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'คำเตือน',
                                    text: data.message,
                                    showCancelButton: false,
                                    confirmButtonColor: '#3085d6',
                                    confirmButtonText: 'ตกลง',
                                    confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                    buttonsStyling: false,
                                })
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'คำเตือน',
                                    text: data.message,
                                    showCancelButton: false,
                                    confirmButtonColor: '#3085d6',
                                    confirmButtonText: 'ตกลง',
                                    confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                    buttonsStyling: false,
                                })
                                toastr['error']('Fail - ' + data.message, 'Warning!', ErrOpt);
                            }
                        },
                        error: function (err) {
                            toastr['error']('Fail', 'Warning!', ErrOpt);
                        },
                        complete: function (data) {
                        }
                    });
                }
            })
        }

        function ExportExcel() {

            Swal.fire({
                title: 'กำลังส่งออกข้อมูล',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading()
                },
            });

            $.ajax({
                url: '@Url.Action("ActionCreateExcelFile", "Master")',
                type: 'POST',
                dataType: 'json',
                data: {
                    'master_type': $('#inputMasterType').val(),
                    'master_code': $('#inputMasterCode').val(),
                    'master_value1': $('#inputMasterValue').val()
                },
                success: function (data) {
                    if (data.status == '@Constants.Result.Success') {
                        OpenExcel(data.path, data.fileName);
                        Swal.fire({
                            title: 'ส่งออกไฟล์สำเร็จ',
                            html: 'I will close in <strong></strong> seconds.',
                            timer: 2000,
                            icon: "success",
                            showCancelButton: false, // There won't be any cancel button
                            showConfirmButton: false, // There won't be any confirm button
                            //confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                            buttonsStyling: false,
                            onBeforeOpen: function () {
                                Swal.showLoading()
                                timerInterval = setInterval(function () {
                                    Swal.getContent().querySelector('strong')
                                        .textContent = Swal.getTimerLeft()
                                }, 100)
                            },
                            onClose: function () {
                                clearInterval(timerInterval)
                            }
                        }).then(function (result) {
                            if (
                                // Read more about handling dismissals
                                result.dismiss === Swal.DismissReason.timer
                            ) {
                                clearModal();
                                Search();
                            }
                        })
                    } else if (data.status == '@Constants.Result.Invalid') {
                        Swal.fire({
                            icon: 'error',
                            title: 'คำเตือน',
                            text: data.message,
                            showCancelButton: false,
                            confirmButtonColor: '#3085d6',
                            confirmButtonText: 'ตกลง',
                            confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                            buttonsStyling: false,
                        })
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'คำเตือน',
                            text: data.message,
                            showCancelButton: false,
                            confirmButtonColor: '#3085d6',
                            confirmButtonText: 'ตกลง',
                            confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                            buttonsStyling: false,
                        })
                        toastr['error']('Fail - ' + data.message, 'Warning!', ErrOpt);
                    }
                },
                error: function () {
                    toastr['error']('Fail', 'Warning!', ErrOpt);
                }
            });
        }

        function OpenExcel(path, fileName) {
            var url = '@Url.Action("ActionOpenFileExcel", "Master")' +
                '?path=' + path +
                '&fileName=' + fileName;
            window.open(url, '_blank');
        }

    </script>
}