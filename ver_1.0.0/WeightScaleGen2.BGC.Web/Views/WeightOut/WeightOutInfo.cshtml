@using WeightScaleGen2.BGC.Web.Common;
@model WeightScaleGen2.BGC.Models.ViewModels.WeightOut.ResultGetWeightOutInfoViewModel;
@{
    ViewData["PageTitle"] = @ViewBag.MenuName;
}
@Html.AntiForgeryToken()
<div class="h-100">
    @* Header Section *@
    <div class="pageMenuTitle">
        @if (Model.mode == Constants.Mode.Created)
        {
            <h3 class="text-black">ชั่งออก</h3>
        }
        else
        {
            <h3 class="text-black">ข้อมูลชั่งออก<br />: @Model.weight_out_no</h3>
        }
    </div>

    <div id="dataContainerHeight" class="dataContainer weightStampInfo">

        <div class="flex flex-row items-center justify-start mb-3">
            <div>
                <button type="button" onclick="GoToIndex();" class="buttonAction primary-bg inline-flex items-center mr-3">
                    <lord-icon src="https://cdn.lordicon.com/jzzzcrxv.json" trigger="hover" stroke="bold" colors="primary:#ffffff,secondary:#ffffff" style="width:20px;height:20px" class="mr-2"></lord-icon>
                    กลับ
                </button>
            </div>
            @if (Model.mode == Constants.Mode.Created)
            {
                <h4 class="dataTitle">ชั่งออก</h4>
            }
            else
            {
                <h4 class="dataTitle">ข้อมูลชั่งออก<br />: @Model.weight_out_no</h4>
            }
        </div>

        <form id="formMainWH" class="needs-validation" novalidate>
            @Html.HiddenFor(x => x.mode, new { @id = "mode" })
            @Html.HiddenFor(x => x.id, new { @id = "id" })
            @Html.HiddenFor(x => x.weight_in_no, new { @id = "weight_in_no" })
            @Html.HiddenFor(x => x.weight_out_no, new { @id = "weight_out_no" })
            <div class="grid grid-cols-1 md:grid-cols-3 gap-2 shadow-sm p-4 mb-4">
                <div class="col-span-1">
                    <label for="weight_out_no" class="d-block mb-2">เลขที่ใบชั่งออก</label>
                    @Html.TextBoxFor(x => x.weight_out_no, new { @class = "border text-gray-900 block w-full p-2.5", @id = "weight_out_no", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1">
                    <label for="weight_in_no" class="d-block mb-2">เลขที่ใบชั่งเข้า</label>
                    @Html.TextBoxFor(x => x.weight_in_no, new { @class = "border text-gray-900 block w-full p-2.5", @id = "weight_in_no", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1">
                    <label for="weight_out_type" class="d-block mb-2">สถานะ</label>
                    @Html.TextBoxFor(x => x.weight_out_type, new { @class = "border text-gray-900 block w-full p-2.5", @id = "weight_out_type", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
            </div>

            <h4 class="text-black">หักน้ำหนักความชื้น</h4>
            <div class="grid gap-2 grid-cols-1 md:grid-cols-2 rounded-lg shadow-sm p-4 mb-4">
                <div class="col-span-1">
                    <label for="percent_humidity_out" class="d-block mb-2">% ที่วัดได้จริง</label>
                    @Html.TextBoxFor(x => x.percent_humidity_out, new { @class = "border text-gray-900 block w-full p-2.5", @id = "percent_humidity_out", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1">
                    <label for="percent_humidity_ok" class="d-block mb-2">% ชดเชยที่ตกลงไว้</label>
                    @Html.TextBoxFor(x => x.percent_humidity_ok, new { @class = "border text-gray-900 block w-full p-2.5", @id = "percent_humidity_ok", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1">
                    <label for="percent_humidity_diff" class="d-block mb-2">% แตกต่าง</label>
                    @Html.TextBoxFor(x => x.percent_humidity_diff, new { @class = "border text-gray-900 block w-full p-2.5", @id = "percent_humidity_diff", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1">
                    <label for="weight_by_item" class="d-block mb-2">คำนวณเป็นน้ำหนักวัตถุดิบ</label>
                    @Html.TextBoxFor(x => x.weight_by_item, new { @class = "border text-gray-900 block w-full p-2.5", @id = "weight_by_item", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
            </div>

            <h4 class="text-black">หักน้ำหนักบรรจุวัสดุ</h4>
            <div class="grid gap-2 grid-cols-1 md:grid-cols-2 rounded-lg shadow-sm p-4 mb-4">
                <div class="col-span-1">
                    <label for="base_unit" class="d-block mb-2">ประเภทวัสดุบรรจุ</label>
                    @Html.TextBoxFor(x => x.base_unit, new { @class = "border text-gray-900 block w-full p-2.5", @id = "base_unit", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1">
                    <label for="weight_decrease" class="d-block mb-2">หักน้ำหนัก</label>
                    @Html.TextBoxFor(x => x.weight_decrease, new { @class = "border text-gray-900 block w-full p-2.5", @id = "weight_decrease", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true, value = "0" })
                </div>
            </div>

            <h4 class="text-black">น้ำหนักและปริมาตรที่ลูกค้าระบุ</h4>
            <div class="grid gap-2 grid-cols-1 md:grid-cols-2 rounded-lg shadow-sm p-4 mb-4">
                <div class="col-span-1">
                    <label for="weight_by_supplier" class="d-block mb-2">น้ำหนักที่ผู้ขายระบุ</label>
                    @Html.TextBoxFor(x => x.weight_by_supplier, new { @class = "border text-gray-900 block w-full p-2.5", @id = "weight_by_supplier", @maxlength = "50" })
                </div>
                <div class="col-span-1">
                    <label for="volume_by_supplier" class="d-block mb-2">ปริมาตรที่ผู้ขายระบุ</label>
                    @Html.TextBoxFor(x => x.volume_by_supplier, new { @class = "border text-gray-900 block w-full p-2.5", @id = "volume_by_Supplier", @maxlength = "50" })
                </div>
            </div>

            <h4 class="text-black">ข้อมูลเทียบ/อ้างอิง</h4>
            <div class="grid gap-2 grid-cols-1 md:grid-cols-2 rounded-lg shadow-sm p-4 mb-4">
                <div class="col-span-1">
                    <label for="sg_supplier" class="d-block mb-2">ค่า SG Supplier</label>
                    @Html.TextBoxFor(x => x.sg_supplier, new { @class = "border text-gray-900 block w-full p-2.5", @id = "sg_supplier", @maxlength = "50" })
                </div>
                <div class="col-span-1">
                    <label for="sg_bg" class="d-block mb-2">ค่า SG BGI</label>
                    @Html.TextBoxFor(x => x.sg_bg, new { @class = "border text-gray-900 block w-full p-2.5", @id = "sg_bg", @maxlength = "50" })
                </div>
                <div class="col-span-1">
                    <label for="api_supplier" class="d-block mb-2">ค่า API Supplier</label>
                    @Html.TextBoxFor(x => x.api_supplier, new { @class = "border text-gray-900 block w-full p-2.5", @id = "api_supplier", @maxlength = "50" })
                </div>
                <div class="col-span-1">
                    <label for="api_bg" class="d-block mb-2">ค่า API BGI</label>
                    @Html.TextBoxFor(x => x.api_bg, new { @class = "border text-gray-900 block w-full p-2.5", @id = "api_bg", @maxlength = "50" })
                </div>
                <div class="col-span-1">
                    <label for="temp_supplier" class="d-block mb-2">ค่า TEMP Supplier</label>
                    @Html.TextBoxFor(x => x.temp_supplier, new { @class = "border text-gray-900 block w-full p-2.5", @id = "temp_supplier", @maxlength = "50" })
                </div>
                <div class="col-span-1">
                    <label for="temp_bg" class="d-block mb-2">ค่า TEMP BGI</label>
                    @Html.TextBoxFor(x => x.temp_bg, new { @class = "border text-gray-900 block w-full p-2.5", @id = "temp_bg", @maxlength = "50", @required = true })
                </div>
            </div>

            <div class="grid gap-2 grid-cols-1 rounded-lg shadow-sm p-4 mb-4">
                <div class="col-span-1">
                    <label for="remark_1" class="d-block mb-2">หมายเหตุ</label>
                    @Html.TextBoxFor(x => x.remark_1, new { @class = "border text-gray-900 block w-full p-2.5", @id = "remark_1", @maxlength = "50" })
                </div>
                <div class="col-span-1">
                    <label for="remark_2" class="d-block mb-2">เพิ่มเติม</label>
                    @Html.TextBoxFor(x => x.remark_2, new { @class = "border text-gray-900 block w-full p-2.5", @id = "remark_2", @maxlength = "50" })
                </div>
            </div>

            <div class="flex justify-content-center mt-12">
                @if (Model.mode == Constants.Mode.Updated && !String.IsNullOrEmpty(@ViewBag.edit) && @ViewBag.edit == "Y")
                {
                    <button type="button" id="btnRealSave" onclick="Save();" class="buttonAction w-180px primary-bg inline-flex justify-content-center items-center">บันทึก</button>
                }
                @if (Model.status != "Deactive")
                {
                    <button type="button" id="btnRealCancel" onclick="CancelWeightOut();" class="buttonAction w-180px eject-bg inline-flex justify-content-center items-center">ยกเลิกใบชั่งออก</button>
                }
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        $("#percent_humidity_out").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#percent_humidity_ok").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#percent_humidity_diff").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_by_item").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#volume_by_supplier").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_by_supplier").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#sg_supplier").on("input blur change", function () {
            let input = $(this).val().replace(/\D/g, '');
            $(this).val(input ? parseInt(input, 10) : '0');
        }).trigger("blur");

        $("#sg_bg").on('blur change input', function () {
            let input = $(this).val().replace(/\D/g, '');
            $(this).val(input ? parseInt(input, 10) : '0');
        }).trigger('blur');

        $("#api_supplier").on('blur change input', function () {
            let input = $(this).val().replace(/\D/g, '');
            $(this).val(input ? parseInt(input, 10) : '0');
        }).trigger('blur');

        $("#api_bg").on('blur change input', function () {
            let input = $(this).val().replace(/\D/g, '');
            $(this).val(input ? parseInt(input, 10) : '0');
        }).trigger('blur');

        $("#temp_supplier").on('blur change input', function () {
            let input = $(this).val().replace(/\D/g, '');
            $(this).val(input ? parseInt(input, 10) : '0');
        }).trigger('blur');

        $("#temp_bg").on('blur change input', function () {
            let input = $(this).val().replace(/\D/g, '');
            $(this).val(input ? parseInt(input, 10) : '0');
        }).trigger('blur');

        function Save() {
            var validFormMain = ValidateFormMain();
            if (validFormMain) {
                RealSaveInfo();
            }
        }

        function ValidateFormMain() {
            if (!$('#formMainWH')[0].checkValidity()) {
                Swal.fire({
                    title: 'คำเตือน',
                    text: 'กรุณากรอกข้อมูลให้ครบถ้วน !',
                    icon: 'error',
                    showCancelButton: false,
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'ตกลง',
                    confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                    buttonsStyling: false,
                })
                return false;
            } else {
                return true;
            }
        }

        function RealSaveInfo() {
            var formData = $('#formMainWH').serialize();
            Swal.fire({
                title: 'ยืนยันการบันทึกข้อมูล ?',
                text: '',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'ยืนยัน',
                cancelButtonText: 'ยกเลิก',
                confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                cancelButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-danger shadow-sm ml-1',
                buttonsStyling: false,
            }).then(function (result) {
                if (result.value) {
                    $.ajax({
                        cache: false,
                        async: true,
                        type: "POST",
                        url: '@Url.Action("SaveWeightOutInfo", "WeightOut")',
                        data: formData,
                        success: function (data) {
                            if (data.status == '@Constants.Result.Success') {
                                var timerInterval
                                Swal.fire({
                                    title: 'บันทึกสำเร็จ !',
                                    html: 'I will close in <strong></strong> seconds.',
                                    timer: 750,
                                    icon: "success",
                                    showCancelButton: false, // There won't be any cancel button
                                    showConfirmButton: false, // There won't be any confirm button
                                    buttonsStyling: false,
                                    onBeforeOpen: function () {
                                        Swal.showLoading()
                                        timerInterval = setInterval(function () {
                                            Swal.getContent().querySelector('strong')
                                                .textContent = Swal.getTimerLeft()
                                        }, 100)
                                    },
                                    onClose: function () {
                                        clearInterval(timerInterval)
                                    }
                                }).then(function (result) {
                                    if (
                                        // Read more about handling dismissals
                                        result.dismiss === Swal.DismissReason.timer
                                    ) {
                                        console.log('หน้าต่างจะปิดในเวลา')
                                        GoToIndex();
                                    }
                                })
                            } else if (data.status == '@Constants.Result.Invalid') {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'คำเตือน',
                                    text: data.message,
                                    showCancelButton: false,
                                    confirmButtonColor: '#3085d6',
                                    confirmButtonText: 'ตกลง',
                                    confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                    buttonsStyling: false,
                                })
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'คำเตือน',
                                    text: data.message,
                                    showCancelButton: false,
                                    confirmButtonColor: '#3085d6',
                                    confirmButtonText: 'ตกลง',
                                    confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                    buttonsStyling: false,
                                })
                                toastr['error']('Fail - ' + data.message, 'Warning!', ErrOpt);
                            }
                        },
                        error: function (err) {
                            toastr['error']('Fail', 'Warning!', ErrOpt);
                        },
                        complete: function (data) {
                        }
                    });
                }
            })
        }

        function CancelWeightOut() {
                    var formData = $('#formMainWH').serialize();
                    Swal.fire({
                        title: 'ยืนยันยกเลิกใบชั่งออก ?',
                        text: '',
                        icon: 'question',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'ยืนยัน',
                        cancelButtonText: 'ยกเลิก',
                        confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                        cancelButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-danger shadow-sm ml-1',
                        buttonsStyling: false,
                    }).then(function (result) {
                        if (result.value) {
                            $.ajax({
                                cache: false,
                                async: true,
                                type: "POST",
                                url: '@Url.Action("SaveWeightOutStatus", "WeightOut")',
                                data: formData,
                                success: function (data) {
                                    if (data.status == '@Constants.Result.Success') {
                                        var timerInterval
                                        Swal.fire({
                                            title: 'บันทึกสำเร็จ !',
                                            html: 'I will close in <strong></strong> seconds.',
                                            timer: 750,
                                            icon: "success",
                                            showCancelButton: false, // There won't be any cancel button
                                            showConfirmButton: false, // There won't be any confirm button
                                            buttonsStyling: false,
                                            onBeforeOpen: function () {
                                                Swal.showLoading()
                                                timerInterval = setInterval(function () {
                                                    Swal.getContent().querySelector('strong')
                                                        .textContent = Swal.getTimerLeft()
                                                }, 100)
                                            },
                                            onClose: function () {
                                                clearInterval(timerInterval)
                                            }
                                        }).then(function (result) {
                                            if (
                                                // Read more about handling dismissals
                                                result.dismiss === Swal.DismissReason.timer
                                            ) {
                                                console.log('หน้าต่างจะปิดในเวลา')
                                                GoToIndex();
                                            }
                                        })
                                    } else if (data.status == '@Constants.Result.Invalid') {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'คำเตือน',
                                            text: data.message,
                                            showCancelButton: false,
                                            confirmButtonColor: '#3085d6',
                                            confirmButtonText: 'ตกลง',
                                            confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                            buttonsStyling: false,
                                        })
                                    } else {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'คำเตือน',
                                            text: data.message,
                                            showCancelButton: false,
                                            confirmButtonColor: '#3085d6',
                                            confirmButtonText: 'ตกลง',
                                            confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                            buttonsStyling: false,
                                        })
                                        toastr['error']('Fail - ' + data.message, 'Warning!', ErrOpt);
                                    }
                                },
                                error: function (err) {
                                    toastr['error']('Fail', 'Warning!', ErrOpt);
                                },
                                complete: function (data) {
                                }
                            });
                        }
                    })
                }

        function GoToIndex() {
            window.location.href = '@Url.Action("Index", "WeightOut")';
        }
    </script>
}