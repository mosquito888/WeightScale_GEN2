@using WeightScaleGen2.BGC.Web.Common;
@model WeightScaleGen2.BGC.Models.ViewModels.WeightOut.ResultGetWeightOutInfoViewModel;
@{
    ViewData["PageTitle"] = @ViewBag.MenuName;
}
@Html.AntiForgeryToken()
<div class="h-100">
    @* Header Section *@
    <div class="pageMenuTitle">
        <h3 class="text-black">ชั่งออก</h3>
    </div>

    <div id="dataContainerHeight" class="dataContainer weightStampInfo">

        <div class="flex flex-row items-center justify-start mb-3">
            <div>
                <button id="btnConfirmWeightOut" onclick="Save()" type="button" class="buttonAction primary-bg inline-flex items-center mr-3 d-none">
                    <lord-icon src="https://cdn.lordicon.com/vbmtnozn.json" trigger="hover" stroke="bold" colors="primary:#ffffff,secondary:#ffffff" style="width:20px;height:20px" class="mr-2"></lord-icon>
                    ยืนยัน
                </button>
                <button type="button" onclick="GoToIndex();" class="buttonAction primary-bg inline-flex items-center mr-3">
                    <lord-icon src="https://cdn.lordicon.com/jzzzcrxv.json" trigger="hover" stroke="bold" colors="primary:#ffffff,secondary:#ffffff" style="width:20px;height:20px" class="mr-2"></lord-icon>
                    กลับ
                </button>
            </div>
            <h4 class="dataTitle">ชั่งออก</h4>
        </div>

        <form id="formMainWH" class="needs-validation" novalidate>
            @Html.HiddenFor(x => x.mode, new { @id = "mode" })
            @Html.HiddenFor(x => x.document_po, new { @id = "document_po" })
            @Html.HiddenFor(x => x.unit_receive, new { @id = "unit_receive" })
            @Html.HiddenFor(x => x.net_uom, new { @id = "net_uom" })
            @Html.HiddenFor(x => x.gross_uom, new { @id = "gross_uom" })
            <div class="grid grid-cols-1 xl:grid-cols-2 gap-2 space-y-2">
                <div class="space-y-4">

                    <h4 class="text-black mb-2">ข้อมูลรถ</h4>
                    <div class="grid gap-2 grid-cols-12 rounded-lg shadow-sm p-4">
                        <div class="col-span-12 md:col-span-9">
                            <label for="car_license" class="d-block mb-2">ทะเบียนรถ</label>
                            @Html.TextBoxFor(x => x.car_license, new { @class = "border text-gray-900 block w-full p-2.5", @id = "car_license", @maxlength = "50", @required = true })
                        </div>
                        <div class="col-span-12 md:col-span-3 mt-auto">
                            <button type="button" onclick="WeightOutByCarLicense();" class="buttonAction w-100 primary-bg inline-flex justify-content-center items-center rounded-sm" style="height: 43px;">
                                <img src="~/icons/search.svg" class="" />
                                ค้นหา
                            </button>
                        </div>
                    </div>

                    <h4 class="text-black mb-2">ข้อมูลการชั่ง</h4>
                    <div class="grid gap-2 grid-cols-1 md:grid-cols-2 rounded-lg shadow-sm p-4">
                        <div class="col-span-1">
                            <label for="weight_in_no" class="d-block mb-2">เลขที่ใบชั่งเข้า</label>
                            <input id="weight_in_no" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                        <div class="col-span-1">
                            <label for="supplier_code" class="d-block mb-2">ชื่อผู้ขาย</label>
                            @Html.DropDownListFor(x => x.supplier_code, SelectListMethods.GetSupplier(), Constants.SelectOption.SelectOne,
                            new
                            {
                                @class = "border text-gray-900 block w-full p-2.5 select2",
                                @id = "supplier_code",
                                @required = true,
                                @disabled = "disabled",
                                @readonly = true
                            })
                        </div>
                        <div class="col-span-1">
                            <label for="item_code" class="d-block mb-2">ชื่อสินค้า</label>
                            @Html.DropDownListFor(x => x.item_code, SelectListMethods.GetItemMaster(), Constants.SelectOption.SelectOne,
                                                        new
                                                        {
                                                            @class = "border text-gray-900 block w-full p-2.5 select2",
                                                            @id = "item_code",
                                                            @required = true,
                                                            @disabled = "disabled",
                                                            @readonly = true
                                                        })
                        </div>
                        <div class="col-span-1">
                            <label for="document_ref" class="d-block mb-2">เลขที่เอกสาร</label>
                            <input id="document_ref" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                    </div>

                    <h4 class="text-black mb-2">หักน้ำหนักความชื้น</h4>
                    <div class="grid gap-2 grid-cols-1 md:grid-cols-2 rounded-lg shadow-sm p-4">
                        <div class="col-span-1">
                            <label for="percent_humidity_out" class="d-block mb-2">% ที่วัดได้จริง</label>
                            @Html.TextBoxFor(x => x.percent_humidity_out, new { @class = "border text-gray-900 block w-full p-2.5", @id = "percent_humidity_out", @maxlength = "50", @required = true, @onchange = "CalculateBagPallet();" })
                        </div>
                        <div class="col-span-1">
                            <label for="percent_humidity_ok" class="d-block mb-2">% ชดเชยที่ตกลงไว้</label>
                            @Html.TextBoxFor(x => x.percent_humidity_ok, new { @class = "border text-gray-900 block w-full p-2.5", @id = "percent_humidity_ok", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                        </div>
                        <div class="col-span-1">
                            <label for="percent_humidity_diff" class="d-block mb-2">% แตกต่าง</label>
                            @Html.TextBoxFor(x => x.percent_humidity_diff, new { @class = "border text-gray-900 block w-full p-2.5", @id = "percent_humidity_diff", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true, @onchange = "CalculateBagPallet();" })
                        </div>
                        <div class="col-span-1">
                            <label for="weight_by_item" class="d-block mb-2">คำนวณเป็นน้ำหนักวัตถุดิบ</label>
                            @Html.TextBoxFor(x => x.weight_by_item, new { @class = "border text-gray-900 block w-full p-2.5", @id = "weight_by_item", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true, @onchange = "CalculateBagPallet();" })
                        </div>
                    </div>

                    <h4 class="text-black mb-2">หักน้ำหนักบรรจุวัสดุ</h4>
                    <div class="grid gap-2 grid-cols-1 md:grid-cols-2 rounded-lg shadow-sm p-4">
                        <div class="col-span-1">
                            <label for="base_unit" class="d-block mb-2">ประเภทวัสดุบรรจุ</label>
                            <select id="base_unit" class="border text-gray-900 block w-full p-2.5" onchange="CalculateUOM()">
                            </select>
                        </div>
                        <div class="col-span-1">
                            <label for="weight_decrease" class="d-block mb-2">หักน้ำหนัก</label>
                            @Html.TextBoxFor(x => x.weight_decrease, new { @class = "border text-gray-900 block w-full p-2.5", @id = "weight_decrease", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true, value = "0" })
                        </div>
                        @* <div class="col-span-1">
                        </div> *@
                        <div class="col-span-1">
                            <label for="qty_bag" class="d-block mb-2">จำนวนถุง (ใบ)</label>
                            @Html.TextBoxFor(x => x.qty_bag, new { @class = "border text-gray-900 block w-full p-2.5", @id = "qty_bag", @maxlength = "50", @required = true, @onchange = "CalculateBagPallet();" })
                        </div>
                        <div class="col-span-1">
                            <label for="weight_bag" class="d-block mb-2">น้ำหนักถุง (KG)</label>
                            @Html.TextBoxFor(x => x.weight_bag, new { @class = "border text-gray-900 block w-full p-2.5", @id = "weight_bag", @maxlength = "50", @required = true, @onchange = "CalculateBagPallet();" })
                        </div>
                        <div class="col-span-1">
                            <label for="total_weight_bag" class="d-block mb-2">รวมน้ำหนักถุง (KG)</label>
                            @Html.TextBoxFor(x => x.total_weight_bag, new { @class = "border text-gray-900 block w-full p-2.5", @id = "total_weight_bag", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true, value = "0", @onchange = "CalculateBagPallet();" })
                        </div>
                        <div class="col-span-1">
                            <label for="qty_pallet" class="d-block mb-2">จำนวนพาเลท (ตัว)</label>
                            @Html.TextBoxFor(x => x.qty_pallet, new { @class = "border text-gray-900 block w-full p-2.5", @id = "qty_pallet", @maxlength = "50", @required = true, @onchange = "CalculateBagPallet();" })
                        </div>
                        <div class="col-span-1">
                            <label for="weight_pallet" class="d-block mb-2">น้ำหนักพาเลท (KG)</label>
                            @Html.TextBoxFor(x => x.weight_pallet, new { @class = "border text-gray-900 block w-full p-2.5", @id = "weight_pallet", @maxlength = "50", @required = true, @onchange = "CalculateBagPallet();" })
                        </div>
                        <div class="col-span-1">
                            <label for="total_weight_pallet" class="d-block mb-2">รวมน้ำหนักพาเลท (KG)</label>
                            @Html.TextBoxFor(x => x.total_weight_pallet, new { @class = "border text-gray-900 block w-full p-2.5", @id = "total_weight_pallet", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true, value = "0", @onchange = "CalculateBagPallet();" })
                        </div>
                    </div>

                    <h4 class="text-black mb-2">น้ำหนักและปริมาตรที่ลูกค้าระบุ</h4>
                    <div class="grid gap-2 grid-cols-1 md:grid-cols-2 rounded-lg shadow-sm p-4">
                        <div class="col-span-1">
                            <label for="weight_by_supplier" class="d-block mb-2">น้ำหนักที่ผู้ขายระบุ</label>
                            @Html.TextBoxFor(x => x.weight_by_supplier, new { @class = "border text-gray-900 block w-full p-2.5", @id = "weight_by_supplier", @maxlength = "50", @required = true })
                        </div>
                        <div class="col-span-1">
                            <label for="volume_by_supplier" class="d-block mb-2">ปริมาตรที่ผู้ขายระบุ</label>
                            @Html.TextBoxFor(x => x.volume_by_supplier, new { @class = "border text-gray-900 block w-full p-2.5", @id = "volume_by_supplier", @maxlength = "50", @required = true })
                        </div>
                    </div>

                    <h4 class="text-black mb-2">ข้อมูลเทียบ/อ้างอิง</h4>
                    <div class="grid gap-2 grid-cols-1 md:grid-cols-2 rounded-lg shadow-sm p-4">
                        <div class="col-span-1">
                            <label for="sg_supplier" class="d-block mb-2">ค่า SG Supplier</label>
                            @Html.TextBoxFor(x => x.sg_supplier, new { @class = "border text-gray-900 block w-full p-2.5", @id = "sg_supplier", @maxlength = "50", @required = true })
                        </div>
                        <div class="col-span-1">
                            <label for="sg_bg" class="d-block mb-2">ค่า SG BGI</label>
                            @Html.TextBoxFor(x => x.sg_bg, new { @class = "border text-gray-900 block w-full p-2.5", @id = "sg_bg", @maxlength = "50", @required = true })
                        </div>
                        <div class="col-span-1">
                            <label for="api_supplier" class="d-block mb-2">ค่า API Supplier</label>
                            @Html.TextBoxFor(x => x.api_supplier, new { @class = "border text-gray-900 block w-full p-2.5", @id = "api_supplier", @maxlength = "50", @required = true })
                        </div>
                        <div class="col-span-1">
                            <label for="api_bg" class="d-block mb-2">ค่า API BGI</label>
                            @Html.TextBoxFor(x => x.api_bg, new { @class = "border text-gray-900 block w-full p-2.5", @id = "api_bg", @maxlength = "50", @required = true })
                        </div>
                        <div class="col-span-1">
                            <label for="temp_supplier" class="d-block mb-2">ค่า TEMP Supplier</label>
                            @Html.TextBoxFor(x => x.temp_supplier, new { @class = "border text-gray-900 block w-full p-2.5", @id = "temp_supplier", @maxlength = "50", @required = true })
                        </div>
                        <div class="col-span-1">
                            <label for="temp_bg" class="d-block mb-2">ค่า TEMP BGI</label>
                            @Html.TextBoxFor(x => x.temp_bg, new { @class = "border text-gray-900 block w-full p-2.5", @id = "temp_bg", @maxlength = "50", @required = true })
                        </div>
                    </div>
                </div>

                <div class="space-y-4">
                    <h4 class="text-black mb-2">น้ำหนักขณะชั่ง</h4>
                    <div class="grid gap-2 grid-cols-12 rounded-lg shadow-sm p-4">
                        <div class="col-span-12 md:col-span-9">
                            <label for="weight_out_data" class="d-block mb-2">น้ำหนักขณะชั่ง (KG)</label>
                            @Html.TextBoxFor(x => x.weight_out, new { @class = "border text-gray-900 block w-full p-2.5", @id = "weight_out_data", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                        </div>
                        <div class="col-span-12 md:col-span-3 mt-auto">
                            <button type="button" onclick="GetWeightOut();" class="buttonAction w-100 primary-bg inline-flex justify-content-center items-center rounded-sm" style="height: 43px;">
                                <img src="~/icons/weight.svg" class="" />
                                รับค่าน้ำหนัก
                            </button>
                        </div>
                    </div>

                    <h4 class="text-black mb-2">รายละเอียดน้ำหนักทั้งหมด</h4>
                    <div class="grid gap-2 grid-cols-1 md:grid-cols-2 rounded-lg shadow-sm p-4">
                        <div class="col-span-1">
                            <label for="weight_in" class="d-block mb-2">น้ำหนักชั่งเข้า (KG)</label>
                            <input id="weight_in" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                        <div class="col-span-1">
                            <label for="before_weight_out" class="d-block mb-2">น้ำหนักชั่งออก (KG)</label>
                            <input id="before_weight_out" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                        <div class="col-span-1">
                            <label for="weight_product" class="d-block mb-2">น้ำหนักสินค้า (KG)</label>
                            <input id="weight_product" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                        <div class="col-span-1">
                            <label for="weight_decrease_all" class="d-block mb-2">น้ำหนักที่หักรวม (KG)</label>
                            <input id="weight_decrease_all" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                        <div class="col-span-1">
                            <label for="weight_total" class="d-block mb-2">น้ำหนักสุทธิ (KG)</label>
                            <input id="weight_total" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                    </div>

                    <div class="flex flex-row flex-wrap gap-2 items-center justify-between mb-2">
                        <h4 class="text-black mb-0">ประวัติการชั่งน้ำหนักเข้าและออก</h4>
                    </div>

                    <div class="grid gap-2 grid-cols-1 md:grid-cols-2 rounded-lg shadow-sm p-4">
                        <div class="col-span-2 flex justify-end">
                            <button type="button" onclick="HistoryWeight();" class="buttonAction w-180px primary-bg inline-flex justify-content-center items-center">
                                <i class="fa-solid fa-clock-rotate-left me-2"></i>
                                ประวัติการขนส่ง
                            </button>
                        </div>
                        <div class="col-span-1">
                            <label for="weight_in_0" class="d-block mb-2">น้ำหนักชั่งเข้าล่าสุด (KG)</label>
                            <input id="weight_in_0" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                        <div class="col-span-1">
                            <label for="weight_out_0" class="d-block mb-2">น้ำหนักชั่งออกล่าสุด (KG)</label>
                            <input id="weight_out_0" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                        <div class="col-span-1">
                            <label for="weight_in_1" class="d-block mb-2">น้ำหนักชั่งเข้าถัดไปครั้งที่ 1 (KG)</label>
                            <input id="weight_in_1" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                        <div class="col-span-1">
                            <label for="weight_out_1" class="d-block mb-2">น้ำหนักชั่งออกถัดไปครั้งที่ 1 (KG)</label>
                            <input id="weight_out_1" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                        <div class="col-span-1">
                            <label for="weight_in_2" class="d-block mb-2">น้ำหนักชั่งเข้าถัดไปครั้งที่ 2 (KG)</label>
                            <input id="weight_in_2" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                        <div class="col-span-1">
                            <label for="weight_out_2" class="d-block mb-2">น้ำหนักชั่งออกถัดไปครั้งที่ 2 (KG)</label>
                            <input id="weight_out_2" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                        <div class="col-span-1">
                            <label for="weight_in_3" class="d-block mb-2">น้ำหนักชั่งถัดไปครั้งที่ 3 (KG)</label>
                            <input id="weight_in_3" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                        <div class="col-span-1">
                            <label for="weight_out_3" class="d-block mb-2">น้ำหนักชั่งออกถัดไปครั้งที่ 3 (KG)</label>
                            <input id="weight_out_3" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                    </div>

                    <h4 class="text-black mb-2">คำนวณเวลาเข้าออก</h4>
                    <div class="grid gap-2 grid-cols-1 rounded-lg shadow-sm p-4">
                        <div class="col-span-1">
                            <label for="cal_in_out" class="d-block mb-2">ชั่วโมง (ชม:นาที)</label>
                            <input id="cal_in_out" type="text" class="border text-gray-900 block w-full p-2.5" disabled readonly />
                        </div>
                    </div>

                    <h4 class="text-black mb-2">สถานะการชั่ง</h4>
                    <div class="grid gap-2 grid-cols-1 rounded-lg shadow-sm p-4">
                        <div class="col-span-1">
                            <label for="weight_out_type" class="d-block mb-2">สถานะ</label>
                            @Html.DropDownListFor(x => x.weight_out_type, SelectListMethods.GetWeightOutStatus(), Constants.SelectOption.SelectOne,
                                                        new
                                                        {
                                                            @class = "border text-gray-900 block w-full p-2.5",
                                                            @id = "weight_out_type",
                                                            @required = true
                                                        })
                        </div>
                    </div>

                    <h4 class="text-black mb-2">หมายเหตุ</h4>
                    <div class="grid gap-2 grid-cols-1 rounded-lg shadow-sm p-4">
                        <div class="col-span-1">
                            <label for="remark_1" class="d-block mb-2">หมายเหตุ 1</label>
                            <input id="remark_1" type="text" class="border text-gray-900 block w-full p-2.5" />
                        </div>
                        <div class="col-span-1">
                            <label for="remark_2" class="d-block mb-2">หมายเหตุ 2</label>
                            <input id="remark_2" type="text" class="border text-gray-900 block w-full p-2.5" />
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        $(function () {
            ConnectWeighingScale();
            $('#weight_out_type').val('ชั่งออก');
        });

        $("#weight_out_data").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_bag").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#qty_bag").on('blur change input', function () {
            let input = $(this).val().replace(/\D/g, '');
            $(this).val(input ? parseInt(input, 10) : '0');
        }).trigger('blur');

        $("#total_weight_bag").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_pallet").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#qty_pallet").on('blur change input', function () {
            let input = $(this).val().replace(/\D/g, '');
            $(this).val(input ? parseInt(input, 10) : '0');
        }).trigger('blur');

        $("#total_weight_pallet").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#percent_humidity_out").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#percent_humidity_ok").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#percent_humidity_diff").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_by_item").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#volume_by_supplier").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_by_supplier").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#sg_supplier").on('blur change input', function () {
            let input = $(this).val().replace(/\D/g, '');
            $(this).val(input ? parseInt(input, 10) : '0');
        }).trigger('blur');

        $("#sg_bg").on('blur change input', function () {
            let input = $(this).val().replace(/\D/g, '');
            $(this).val(input ? parseInt(input, 10) : '0');
        }).trigger('blur');

        $("#api_supplier").on('blur change input', function () {
            let input = $(this).val().replace(/\D/g, '');
            $(this).val(input ? parseInt(input, 10) : '0');
        }).trigger('blur');

        $("#api_bg").on('blur change input', function () {
            let input = $(this).val().replace(/\D/g, '');
            $(this).val(input ? parseInt(input, 10) : '0');
        }).trigger('blur');

        $("#temp_supplier").on('blur change input', function () {
            let input = $(this).val().replace(/\D/g, '');
            $(this).val(input ? parseInt(input, 10) : '0');
        }).trigger('blur');

        $("#temp_bg").on('blur change input', function () {
            let input = $(this).val().replace(/\D/g, '');
            $(this).val(input ? parseInt(input, 10) : '0');
        }).trigger('blur');

        $("#weight_in").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#before_weight_out").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_product").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_decrease_all").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_total").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_in_0").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_out_0").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_in_1").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_out_1").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_in_2").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_out_2").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_in_3").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_out_3").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        function ConnectWeighingScale() {
            $.ajax({
                cache: false,
                async: true,
                type: "GET",
                url: "http://localhost:9000/api/runservice",
                success: function (data) {
                if (data == 'OK') {

                    var timerInterval
                    Swal.fire({
                        title: 'เชื่อมต่อเครื่องชั่งสำเร็จ !',
                        html: 'I will close in <strong></strong> seconds.',
                        timer: 1250,
                        icon: "success",
                        showCancelButton: false, // There won't be any cancel button
                        showConfirmButton: false, // There won't be any confirm button
                        buttonsStyling: false,
                        onBeforeOpen: function () {
                        Swal.showLoading()
                            timerInterval = setInterval(function () {
                            Swal.getContent().querySelector('strong')
                                .textContent = Swal.getTimerLeft()
                            }, 100)
                        },
                        onClose: function () {
                            clearInterval(timerInterval)
                        }
                        }).then(function (result) {
                            if (
                                // Read more about handling dismissals
                                result.dismiss === Swal.DismissReason.timer
                            ) {
                                console.log('หน้าต่างจะปิดในเวลา')
                            }
                            })

                } else {
                    var timerInterval
                    Swal.fire({
                        title: 'เชื่อมต่อเครื่องชั่งไม่สำเร็จ !',
                        html: 'I will close in <strong></strong> seconds.',
                        timer: 1250,
                        icon: "error",
                        showCancelButton: false, // There won't be any cancel button
                        showConfirmButton: false, // There won't be any confirm button
                        buttonsStyling: false,
                        onBeforeOpen: function () {
                        Swal.showLoading()
                            timerInterval = setInterval(function () {
                            Swal.getContent().querySelector('strong')
                                .textContent = Swal.getTimerLeft()
                            }, 100)
                        },
                        onClose: function () {
                            clearInterval(timerInterval)
                        }
                        }).then(function (result) {
                            if (
                                // Read more about handling dismissals
                                result.dismiss === Swal.DismissReason.timer
                            ) {
                                console.log('หน้าต่างจะปิดในเวลา')
                                GoToIndex();
                            }
                            })
                }
            },
            error: function (err) {
                toastr['error']('Fail', 'Warning!', ErrOpt);
            },
            complete: function (data) {
            }
            });
        }

        function WeightOutByCarLicense() {
            var car_license = $('#car_license').val();
            $.ajax({
                cache: false,
                async: true,
                type: "POST",
                url: '@Url.Action("WeightInInfoByCarLicense", "WeightIn")',
                data: {
                    car_license : car_license,
                    status: 'Active'
                },
                success: function (data) {
                if (data.status == '@Constants.Result.Success' && data.data.status == 'Active') {
                    // $('#formMainWH')[0].reset();
                    $('#car_license').val(car_license);
                    $('#document_po').val(data.data.document_po);
                    $('#document_ref').val(data.data.document_ref);
                    $('#weight_in').val(data.data.weight_in.toFixed(2));
                    $('#weight_in_no').val(data.data.weight_in_no);
                    $('#cal_in_out').val(data.data.cal_in_out);
                    $('#percent_humidity_ok').val(data.data.percent_humidity_ok.toFixed(2));
                    $('#remark_1').val(data.data.remark_1);

                    $('#item_code').val(data.data.item_code).trigger('change');
                    $('#supplier_code').val(data.data.supplier_code).trigger('change');
                    CalculateBagPallet();
                    $('#btnConfirmWeightOut').removeClass("d-none");
                    GetUOMList(data.data.item_code, data.data.document_po);
                    var timerInterval
                    Swal.fire({
                        title: 'ค้นหาสำเร็จ !',
                        html: 'I will close in <strong></strong> seconds.',
                        timer: 750,
                        icon: "success",
                        showCancelButton: false, // There won't be any cancel button
                        showConfirmButton: false, // There won't be any confirm button
                        buttonsStyling: false,
                        onBeforeOpen: function () {
                        Swal.showLoading()
                            timerInterval = setInterval(function () {
                            Swal.getContent().querySelector('strong')
                                .textContent = Swal.getTimerLeft()
                            }, 100)
                        },
                        onClose: function () {
                            clearInterval(timerInterval)
                        }
                        }).then(function (result) {
                            if (
                                // Read more about handling dismissals
                                result.dismiss === Swal.DismissReason.timer
                            ) {
                                console.log('หน้าต่างจะปิดในเวลา')
                            }
                            })
                } else if (data.status == '@Constants.Result.Invalid') {
                        Swal.fire({
                                        icon: 'error',
                                        title: 'คำเตือน',
                                        text: 'Data not Found',
                                        showCancelButton: false,
                                        confirmButtonColor: '#3085d6',
                                        confirmButtonText: 'ตกลง',
                                        confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                        buttonsStyling: false,
                        })
                        $('#btnConfirmWeightOut').addClass("d-none");
                        $('#formMainWH')[0].reset();
                } else {
                        Swal.fire({
                                        icon: 'error',
                                        title: 'คำเตือน',
                                        text: data.message,
                                        showCancelButton: false,
                                        confirmButtonColor: '#3085d6',
                                        confirmButtonText: 'ตกลง',
                                        confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                        buttonsStyling: false,
                        })
                        $('#btnConfirmWeightOut').addClass("d-none");
                        $('#formMainWH')[0].reset();
                        toastr['error']('Fail - ' + data.message, 'Warning!', ErrOpt);
                }
            },
            error: function (err) {
                    var timerInterval
                    Swal.fire({
                        title: 'เชื่อมต่อเครื่องชั่งไม่สำเร็จ !',
                        html: 'I will close in <strong></strong> seconds.',
                        timer: 1250,
                        icon: "error",
                        showCancelButton: false, // There won't be any cancel button
                        showConfirmButton: false, // There won't be any confirm button
                        buttonsStyling: false,
                        onBeforeOpen: function () {
                        Swal.showLoading()
                            timerInterval = setInterval(function () {
                            Swal.getContent().querySelector('strong')
                                .textContent = Swal.getTimerLeft()
                            }, 100)
                        },
                        onClose: function () {
                            clearInterval(timerInterval)
                        }
                        }).then(function (result) {
                            if (
                                // Read more about handling dismissals
                                result.dismiss === Swal.DismissReason.timer
                            ) {
                                console.log('หน้าต่างจะปิดในเวลา')
                                GoToIndex();
                            }
                            })
            },
            complete: function (data) {
            }
            });
        }

        function HistoryWeight() {
                    $.ajax({
                        cache: false,
                        async: true,
                        type: "POST",
                        url: '@Url.Action("WeightHistory", "WeightOut")',
                        data: {
                            car_license : $('#car_license').val(),
                        },
                        success: function (data) {
                        if (data.status == '@Constants.Result.Success') {
                            if(data.in_his_data && data.in_his_data.length > 0) {
                                for (let i = 0; i < data.in_his_data.length; i++) {
                                    $('#weight_in_' + i).val(parseFloat(data.in_his_data[i].weight_in.toFixed(2)).toLocaleString());
                                }
                            }

                        if(data.out_his_data && data.out_his_data.length > 0) {
                            for (let i = 0; i < data.out_his_data.length; i++) {
                                $('#weight_out_' + i).val(parseFloat(data.out_his_data[i].before_weight_out.toFixed(2)).toLocaleString());
                            }
                        }

                                    var timerInterval
                            Swal.fire({
                                title: 'ค้นหาสำเร็จ !',
                                html: 'I will close in <strong></strong> seconds.',
                                timer: 750,
                                icon: "success",
                                showCancelButton: false, // There won't be any cancel button
                                showConfirmButton: false, // There won't be any confirm button
                                buttonsStyling: false,
                                onBeforeOpen: function () {
                                Swal.showLoading()
                                    timerInterval = setInterval(function () {
                                    Swal.getContent().querySelector('strong')
                                        .textContent = Swal.getTimerLeft()
                                    }, 100)
                                },
                                onClose: function () {
                                    clearInterval(timerInterval)
                                }
                                }).then(function (result) {
                                    if (
                                        // Read more about handling dismissals
                                        result.dismiss === Swal.DismissReason.timer
                                    ) {
                                        console.log('หน้าต่างจะปิดในเวลา')
                                    }
                                    })
                        } else if (data.status == '@Constants.Result.Invalid') {
                                Swal.fire({
                                                icon: 'error',
                                                title: 'คำเตือน',
                                                text: 'Data not Found',
                                                showCancelButton: false,
                                                confirmButtonColor: '#3085d6',
                                                confirmButtonText: 'ตกลง',
                                                confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                                buttonsStyling: false,
                                })
                        } else {
                                Swal.fire({
                                                icon: 'error',
                                                title: 'คำเตือน',
                                                text: data.message,
                                                showCancelButton: false,
                                                confirmButtonColor: '#3085d6',
                                                confirmButtonText: 'ตกลง',
                                                confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                                buttonsStyling: false,
                                })
                                toastr['error']('Fail - ' + data.message, 'Warning!', ErrOpt);
                        }
                    },
                    error: function (err) {
                        toastr['error']('Fail', 'Warning!', ErrOpt);
                    },
                    complete: function (data) {
                    }
                    });
                }

        function GetWeightOut() {
            $.ajax({
                cache: false,
                async: true,
                type: "GET",
                url: "http://localhost:9000/api/weight",
                success: function (data) {
                if (parseInt(data) > 0) {

                    var timerInterval
                    Swal.fire({
                        title: 'เชื่อมต่อเครื่องชั่งสำเร็จ !',
                        html: 'I will close in <strong></strong> seconds.',
                        timer: 1250,
                        icon: "success",
                        showCancelButton: false, // There won't be any cancel button
                        showConfirmButton: false, // There won't be any confirm button
                        buttonsStyling: false,
                        onBeforeOpen: function () {
                        Swal.showLoading()
                            timerInterval = setInterval(function () {
                            Swal.getContent().querySelector('strong')
                                .textContent = Swal.getTimerLeft()
                            }, 100)
                        },
                        onClose: function () {
                            clearInterval(timerInterval)
                        }
                        }).then(function (result) {
                            if (
                                // Read more about handling dismissals
                                result.dismiss === Swal.DismissReason.timer
                            ) {
                                console.log('หน้าต่างจะปิดในเวลา')
                                $('#weight_out_data').val(parseInt(data).toString());
                                $('#before_weight_out').val($('#weight_out_data').val());
                                CalculateBagPallet();
                                CalculateUOM();
                            }
                            })

                } else {
                    var timerInterval
                    Swal.fire({
                        title: 'เชื่อมต่อเครื่องชั่งไม่สำเร็จ !',
                        html: 'I will close in <strong></strong> seconds.',
                        timer: 1250,
                        icon: "error",
                        showCancelButton: false, // There won't be any cancel button
                        showConfirmButton: false, // There won't be any confirm button
                        buttonsStyling: false,
                        onBeforeOpen: function () {
                        Swal.showLoading()
                            timerInterval = setInterval(function () {
                            Swal.getContent().querySelector('strong')
                                .textContent = Swal.getTimerLeft()
                            }, 100)
                        },
                        onClose: function () {
                            clearInterval(timerInterval)
                        }
                        }).then(function (result) {
                            if (
                                // Read more about handling dismissals
                                result.dismiss === Swal.DismissReason.timer
                            ) {
                                console.log('หน้าต่างจะปิดในเวลา')
                            }
                            })
                }
            },
            error: function (err) {
                    var timerInterval
                    Swal.fire({
                        title: 'เชื่อมต่อเครื่องชั่งไม่สำเร็จ !',
                        html: 'I will close in <strong></strong> seconds.',
                        timer: 1250,
                        icon: "error",
                        showCancelButton: false, // There won't be any cancel button
                        showConfirmButton: false, // There won't be any confirm button
                        buttonsStyling: false,
                        onBeforeOpen: function () {
                        Swal.showLoading()
                            timerInterval = setInterval(function () {
                            Swal.getContent().querySelector('strong')
                                .textContent = Swal.getTimerLeft()
                            }, 100)
                        },
                        onClose: function () {
                            clearInterval(timerInterval)
                        }
                        }).then(function (result) {
                            if (
                                // Read more about handling dismissals
                                result.dismiss === Swal.DismissReason.timer
                            ) {
                                console.log('หน้าต่างจะปิดในเวลา')
                                // GoToIndex();
                            }
                    })
            },
            complete: function (data) {
            }
            });
        }

        function CalculateBagPallet() {
            var sumProduct = parseFloat($('#weight_in').val() || 0) - parseFloat($('#before_weight_out').val() || 0);
            $('#weight_product').val(parseFloat(sumProduct).toFixed(2));

            // คำนวณน้ำหนักถุง
            var sumBag = parseFloat($('#qty_bag').val() || 0) * parseFloat($('#weight_bag').val() || 0);
            $('#total_weight_bag').val(sumBag.toFixed(2));

            // คำนวณน้ำหนักพาเลท
            var sumPallet = parseFloat($('#qty_pallet').val() || 0) * parseFloat($('#weight_pallet').val() || 0);
            $('#total_weight_pallet').val(sumPallet.toFixed(2));

            var weightProduct = parseFloat($('#weight_product').val() || 0);
            var percentHumidity = parseFloat($('#percent_humidity_diff').val() || 0);

            // คำนวณน้ำหนักความชื้น
            var humidityWeight = 0;
            if (percentHumidity > 0) {
                humidityWeight = (percentHumidity * weightProduct) / 100;
            }
            $('#weight_by_item').val(humidityWeight.toFixed(2));

            var decrease = parseFloat($('#weight_decrease').val() || 0);

            // คำนวณน้ำหนักที่หักทั้งหมด
            var totalDecrease = humidityWeight + sumBag + sumPallet + decrease;
            $('#weight_decrease_all').val(totalDecrease.toFixed(2));

            // คำนวณน้ำหนักสุทธิหลังหัก
            var totalWeight = weightProduct - humidityWeight - sumBag - sumPallet - decrease;
            $('#weight_total').val(totalWeight.toFixed(2));

            // Remark
            let remark = '';
            if (totalDecrease !== 0.00) {
                if (percentHumidity !== 0.00) {
                    remark += 'หักความชื้น ' + percentHumidity.toFixed(2) + ' % ';
                }
                if (sumBag !== 0.00) {
                    remark += 'หักถุงนน. ' + sumBag.toFixed(2) + ' กก. ';
                }
                if (sumPallet !== 0.00) {
                    remark += 'หักพาเลทนน. ' + sumPallet.toFixed(2) + ' กก. ';
                }
                if (decrease !== 0.00) {
                    remark += 'หักวัสดุบรรจุนน. ' + decrease.toFixed(2) + ' กก.';
                }
            }

            if (remark.length > 50) {
                remark = remark.substring(0, 49);
            }

            $('#remark_2').val(remark);
        }


        function GoToIndex() {
            window.location.href = '@Url.Action("Index", "WeightOut")';
        }

        function ValidateFormMain() {
            if (!$('#formMainWH')[0].checkValidity() || $('#weight_out_data').val() == '0.00') {
                Swal.fire({
                    title: 'คำเตือน',
                    text: 'กรุณากรอกข้อมูลให้ครบถ้วน !',
                    icon: 'error',
                    showCancelButton: false,
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'ตกลง',
                    confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                    buttonsStyling: false,
                })
                return false;
            } else {
                return true;
            }
        }

        function Save() {
            var validFormMain = ValidateFormMain();
            if (validFormMain) {
                RealSaveInfo();
            }
        }

        function RealSaveInfo() {
            console.log('mode ' + $('#mode').val());
            var param = {};
            param.mode = $('#mode').val();
            param.car_license = $('#car_license').val();
            param.weight_out_type = $('#weight_out_type').val();
            param.before_weight_out = $('#before_weight_out').val();
            param.weight_out = $('#weight_out_data').val();
            param.weight_total = $('#weight_total').val();
            param.weight_in_no = $('#weight_in_no').val();
            param.percent_humidity_diff = $('#percent_humidity_diff').val();
            param.percent_humidity_ok = $('#percent_humidity_ok').val();
            param.percent_humidity_out = $('#percent_humidity_out').val();
            param.weight_pallet = $('#weight_pallet').val();
            param.qty_pallet = $('#qty_pallet').val();
            param.total_weight_pallet = $('#total_weight_pallet').val();
            param.weight_bag = $('#weight_bag').val();
            param.qty_bag = $('#qty_bag').val();
            param.total_weight_bag = $('#total_weight_bag').val();
            param.sg_bg = $('#sg_bg').val();
            param.sg_supplier = $('#sg_supplier').val();
            param.api_bg = $('#api_bg').val();
            param.api_supplier = $('#api_supplier').val();
            param.temp_bg = $('#temp_bg').val();
            param.temp_supplier = $('#temp_supplier').val();
            param.volume_by_supplier = $('#volume_by_supplier').val();
            param.weight_by_supplier = $('#weight_by_supplier').val();
            param.remark_1 = $('#remark_1').val();
            param.remark_2 = $('#remark_2').val();
            param.base_unit = $('#base_unit').val();
            param.unit_receive = $('#unit_receive').val();
            param.gross_uom = $('#gross_uom').val();
            param.net_uom = $('#net_uom').val();
            param.item_code = $('#item_code').val();
            param.document_po = $('#document_po').val();

            (async () => {
                const { value: formValue } = await Swal.fire({
                    title: 'ยืนยันการสร้างใบชั่งออก ?',
                    html:
                        '<div>' +
                        '<label for="cf_weight_by_supplier" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">น้ำหนักที่ผู้ขายระบุ</label>' +
                        '<input type="text" id="cf_weight_by_supplier" class="border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" />' +
                        '</div>', 
                    focusConfirm: false,
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'ยืนยัน',
                    cancelButtonText: 'ยกเลิก',
                    confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                    cancelButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-danger shadow-sm ml-1',
                    buttonsStyling: false,
                    didOpen: () => {
                        const $input = $('#cf_weight_by_supplier');
                        $input.on('blur change input', function () {
                            let input = $(this).val().replace(/\D/g, '');
                            $(this).val((input / 100).toFixed(2));
                        }).trigger('blur');
                    },
                    preConfirm: () => {
                        const val = $('#cf_weight_by_supplier').val();
                        if (!val) {
                            Swal.showValidationMessage('กรุณากรอกน้ำหนักที่ผู้ขายระบุ');
                            return false;
                        }
                        return val;
                    }
                });

                if (formValue) {
                    param.weight_by_supplier = formValue;

                    $.ajax({
                        cache: false,
                        async: true,
                        type: "POST",
                        url: '@Url.Action("SaveWeightOutInfo", "Weightout")',
                        data: param,
                        success: function (data) {
                            if (data.status == '@Constants.Result.Success') {
                                PrintItem(data.id);
                                let timerInterval;
                                Swal.fire({
                                    title: 'บันทึกสำเร็จ !',
                                    html: 'I will close in <strong></strong> seconds.',
                                    timer: 750,
                                    icon: "success",
                                    showCancelButton: false,
                                    showConfirmButton: false,
                                    buttonsStyling: false,
                                    didOpen: () => {
                                        Swal.showLoading();
                                        timerInterval = setInterval(() => {
                                            Swal.getContent().querySelector('strong')
                                                .textContent = Swal.getTimerLeft();
                                        }, 100);
                                    },
                                    willClose: () => {
                                        clearInterval(timerInterval);
                                    }
                                }).then((result) => {
                                    if (result.dismiss === Swal.DismissReason.timer) {
                                        console.log('หน้าต่างจะปิดในเวลา');
                                        GoToIndex();
                                    }
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'คำเตือน',
                                    text: data.message,
                                    showCancelButton: false,
                                    confirmButtonColor: '#3085d6',
                                    confirmButtonText: 'ตกลง',
                                    confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                    buttonsStyling: false,
                                });
                                if (data.status != '@Constants.Result.Invalid') {
                                    toastr['error']('Fail - ' + data.message, 'Warning!', ErrOpt);
                                }
                            }
                        },
                        error: function () {
                            toastr['error']('Fail', 'Warning!', ErrOpt);
                        }
                    });
                }
            })();

            // Swal.fire({
            //     title: 'ยืนยันการสร้างใบชั่งออก ?',
            //     text: '',
            //     icon: 'question',
            //     showCancelButton: true,
            //     confirmButtonColor: '#3085d6',
            //     cancelButtonColor: '#d33',
            //     confirmButtonText: 'ยืนยัน',
            //     cancelButtonText: 'ยกเลิก',
            //     confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
            //     cancelButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-danger shadow-sm ml-1',
            //     buttonsStyling: false,
            // }).then(function (result) {
            //     if (result.value) {
            //         $.ajax({
            //             cache: false,
            //             async: true,
            //             type: "POST",
            //             url: '@Url.Action("SaveWeightOutInfo", "Weightout")',
            //             data: param,
            //             success: function (data) {
            //                 if (data.status == '@Constants.Result.Success') {
            //                     PrintItem(data.id);
            //                     var timerInterval
            //                     Swal.fire({
            //                         title: 'บันทึกสำเร็จ !',
            //                         html: 'I will close in <strong></strong> seconds.',
            //                         timer: 750,
            //                         icon: "success",
            //                         showCancelButton: false, // There won't be any cancel button
            //                         showConfirmButton: false, // There won't be any confirm button
            //                         buttonsStyling: false,
            //                         onBeforeOpen: function () {
            //                             Swal.showLoading()
            //                             timerInterval = setInterval(function () {
            //                                 Swal.getContent().querySelector('strong')
            //                                     .textContent = Swal.getTimerLeft()
            //                             }, 100)
            //                         },
            //                         onClose: function () {
            //                             clearInterval(timerInterval)
            //                         }
            //                     }).then(function (result) {
            //                         if (
            //                             // Read more about handling dismissals
            //                             result.dismiss === Swal.DismissReason.timer
            //                         ) {
            //                             console.log('หน้าต่างจะปิดในเวลา')
            //                             GoToIndex();
            //                         }
            //                     })
            //                 } else if (data.status == '@Constants.Result.Invalid') {
            //                     Swal.fire({
            //                         icon: 'error',
            //                         title: 'คำเตือน',
            //                         text: data.message,
            //                         showCancelButton: false,
            //                         confirmButtonColor: '#3085d6',
            //                         confirmButtonText: 'ตกลง',
            //                         confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
            //                         buttonsStyling: false,
            //                     })
            //                 } else {
            //                     Swal.fire({
            //                         icon: 'error',
            //                         title: 'คำเตือน',
            //                         text: data.message,
            //                         showCancelButton: false,
            //                         confirmButtonColor: '#3085d6',
            //                         confirmButtonText: 'ตกลง',
            //                         confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
            //                         buttonsStyling: false,
            //                     })
            //                     toastr['error']('Fail - ' + data.message, 'Warning!', ErrOpt);
            //                 }
            //             },
            //             error: function (err) {
            //                 toastr['error']('Fail', 'Warning!', ErrOpt);
            //             },
            //             complete: function (data) {
            //             }
            //         });
            //     }
            // })
        }

        function GetUOMList(item_code, document_po) 
        {
            if(document_po != '-') 
            {
                $.ajax({
                        cache: false,
                        async: true,
                        type: "POST",
                        url: '@Url.Action("SearchDataByMaterialCode", "UOMConversion")',
                        data: {
                            material_code : $('#item_code').val(),
                        },
                        success: function (data) {
                        if (data.status == '@Constants.Result.Success') {
                            $('#base_unit').empty();

                            $.each(data.data, function (index, item) {
                                $('#base_unit').append(
                                    $('<option>', {
                                        value: item.alter_uom,
                                        text: item.alter_uom
                                    })
                                );
                            });
                            $('#base_unit').val(data.data[0].alter_uom).trigger('change');
                            CalculateUOM();
                        } else if (data.status == '@Constants.Result.Invalid') {
                                Swal.fire({
                                                icon: 'error',
                                                title: 'คำเตือน',
                                                text: 'Data not Found',
                                                showCancelButton: false,
                                                confirmButtonColor: '#3085d6',
                                                confirmButtonText: 'ตกลง',
                                                confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                                buttonsStyling: false,
                                })
                        } else {
                                Swal.fire({
                                                icon: 'error',
                                                title: 'คำเตือน',
                                                text: data.message,
                                                showCancelButton: false,
                                                confirmButtonColor: '#3085d6',
                                                confirmButtonText: 'ตกลง',
                                                confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                                buttonsStyling: false,
                                })
                                toastr['error']('Fail - ' + data.message, 'Warning!', ErrOpt);
                        }
                    },
                    error: function (err) {
                        toastr['error']('Fail', 'Warning!', ErrOpt);
                    },
                    complete: function (data) {
                    }
                    });            
            }
            else
            {
                $('#base_unit').val('KG');
                $('#unit_receive').val('KG');
                $('#net_uom').val('1');
                $('#gross_uom').val('1');
                $('#base_unit').empty();
                $('#base_unit').append('<option value="KG" selected>KG</option>');
            }
        }

        function CalculateUOM() 
        {
            var draftReceive = parseFloat(parseFloat($('#weight_product').val()) - parseFloat($('#weight_product').val())).toFixed(2);
            if($('#base_unit').val() != null && $('#document_po').val() != null && $('#document_po').val() != '-')
            {
                var weightUOM;
                $.ajax({
                        cache: false,
                        async: true,
                        type: "POST",
                        url: '@Url.Action("SearchData", "UOMConversion")',
                        data: {
                            material_code : $('#item_code').val(),
                            uom : $('#base_unit').val(),
                        },
                        success: function (data) {
                        if (data.status == '@Constants.Result.Success' && data.data.length > 0) {
                           if(data.data.net_weight > 0 && data.data[0].gross_weight > 0) {
                                var kidneys = parseFloat((draftReceive * data.data[0].net_weight) / data.data[0].gross_weight);
                                var rs = parseFloat(draftReceive - kidneys);
                                $('#weight_decrease').val(rs);
                           }
                           $('#base_unit').val(data.data[0].base_uom);
                           $('#unit_receive').val(data.data[0].alter_uom);

                           if(data.data[0].net_weight > 0) {
                                $('#net_uom').val(data.data[0].net_weight);
                           }
                           else
                           {
                                $('#net_uom').val('1');
                           }

                           if(data.data[0].gross_weight > 0) {
                                $('#gross_uom').val(data.data[0].gross_weight);
                           }
                           else
                           {
                                $('#gross_uom').val('1');
                           }
                           CalculateBagPallet();
                        } else if (data.status == '@Constants.Result.Invalid') {
                                Swal.fire({
                                                icon: 'error',
                                                title: 'คำเตือน',
                                                text: 'Data not Found',
                                                showCancelButton: false,
                                                confirmButtonColor: '#3085d6',
                                                confirmButtonText: 'ตกลง',
                                                confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                                buttonsStyling: false,
                                })
                        } else {
                                Swal.fire({
                                                icon: 'error',
                                                title: 'คำเตือน',
                                                text: data.message,
                                                showCancelButton: false,
                                                confirmButtonColor: '#3085d6',
                                                confirmButtonText: 'ตกลง',
                                                confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                                buttonsStyling: false,
                                })
                                toastr['error']('Fail - ' + data.message, 'Warning!', ErrOpt);
                        }
                    },
                    error: function (err) {
                        toastr['error']('Fail', 'Warning!', ErrOpt);
                    },
                    complete: function (data) {
                    }
                    });                  
            }
        }

        function PrintItem(id) {
            window.open('@Url.Action("ActionPrintPdfWeightOutInfo", "WeightOut")?id=' + id, '_blank');
        }
    </script>
}