@using WeightScaleGen2.BGC.Web.Common;
@model WeightScaleGen2.BGC.Models.ViewModels.WeightHistory.ResultGetWeightHistoryInfoViewModel;
@{
    ViewData["PageTitle"] = @ViewBag.MenuName;
}
@Html.AntiForgeryToken()
<div class="h-100">
    @* Header Section *@
    <div class="pageMenuTitle">
        @if (Model.mode == Constants.Mode.Created)
        {
            <h3 class="text-black">ประวัติการชั่ง</h3>
        }
        else
        {
            <h3 class="text-black">ชั่งเข้าเลขที่ : @Model.weight_in_no<br />ชั่งออกเลขที่ : @Model.weight_out_no</h3>
        }
    </div>

    <div id="dataContainerHeight" class="dataContainer">

        <div class="flex flex-row items-center justify-start mb-3">
            <div>
                <button type="button" onclick="GoToIndex();" class="buttonAction primary-bg inline-flex items-center mr-3">
                    <lord-icon src="https://cdn.lordicon.com/jzzzcrxv.json" trigger="hover" stroke="bold" colors="primary:#ffffff,secondary:#ffffff" style="width:20px;height:20px" class="mr-2"></lord-icon>
                    กลับ
                </button>
            </div>
            @if (Model.mode == Constants.Mode.Created)
            {
                <h4 class="dataTitle">ประวัติการชั่ง</h4>
            }
            else
            {
                <h4 class="dataTitle">ชั่งเข้าเลขที่ : @Model.weight_in_no<br />ชั่งออกเลขที่ : @Model.weight_out_no</h4>
            }
        </div>

        <form id="formMainWH" class="needs-validation" novalidate>
            @Html.HiddenFor(x => x.mode, new { @id = "mode" })
            @Html.HiddenFor(x => x.id, new { @id = "id" })
            <div class="grid gap-4 space-y-4 grid-cols-1 md:grid-cols-4">
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="weight_out_no" class="d-block mb-2">เลขที่ใบชั่งออก</label>
                    @Html.TextBoxFor(x => x.weight_out_no, new { @class = "border text-gray-900 block w-full p-2.5", @id = "weight_out_no", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="weight_in_no" class="d-block mb-2">เลขที่ใบชั่งเข้า</label>
                    @Html.TextBoxFor(x => x.weight_in_no, new { @class = "border text-gray-900 block w-full p-2.5", @id = "weight_in_no", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="before_weight_out" class="d-block mb-2">น้ำหนักชั่งออก</label>
                    @Html.TextBoxFor(x => x.before_weight_out, new { @class = "border text-gray-900 block w-full p-2.5", @id = "before_weight_out", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="weight_in" class="d-block mb-2">น้ำหนักชั่งเข้า</label>
                    @Html.TextBoxFor(x => x.weight_in, new { @class = "border text-gray-900 block w-full p-2.5", @id = "weight_in", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="weight_receive" class="d-block mb-2">น้ำหนักที่รับ</label>
                    @Html.TextBoxFor(x => x.weight_receive, new { @class = "border text-gray-900 block w-full p-2.5", @id = "weight_receive", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                @if (Model.mode == Constants.Mode.Created)
                {
                    <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                        <label for="supplier_code" class="d-block mb-2">ผู้ส่ง</label>
                        @Html.DropDownListFor(x => x.supplier_code, SelectListMethods.GetSupplier(), Constants.SelectOption.SelectOne,
                        new
                        {
                            @class = "border text-gray-900 block w-full p-2.5 select2",
                            @id = "supplier_code",
                            @required = true
                        })
                </div>
                        }
                else
                {
                    <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                        <label for="supplier_code" class="d-block mb-2">ผู้ส่ง</label>
                        @Html.DropDownListFor(x => x.supplier_code, SelectListMethods.GetSupplier(Model.supplier_code), Constants.SelectOption.SelectOne,
                        new
                        {
                            @class = "border text-gray-900 block w-full p-2.5",
                            @id = "supplier_code",
                            @required = true,
                            @disabled = "disabled",
                            @readonly = true
                        })
                </div>
                        }
                @if (Model.mode == Constants.Mode.Created)
                {
                    <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                        <label for="item_code" class="d-block mb-2">สินค้า</label>
                        @Html.DropDownListFor(x => x.item_code, SelectListMethods.GetItemMaster(), Constants.SelectOption.SelectOne,
                        new
                        {
                            @class = "border text-gray-900 block w-full p-2.5 select2",
                            @id = "item_code",
                            @required = true
                        })
                </div>
                        }
                else
                {
                    <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                        <label for="item_code" class="d-block mb-2">สินค้า</label>
                        @Html.DropDownListFor(x => x.item_code, SelectListMethods.GetItemMaster(Model.item_code), Constants.SelectOption.SelectOne,
                        new
                        {
                            @class = "border text-gray-900 block w-full p-2.5",
                            @id = "item_code",
                            @required = true,
                            @disabled = "disabled",
                            @readonly = true
                        })
                    </div>
                        }
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="item_remark" class="d-block mb-2">รหัสสินค้า JDE</label>
                    @Html.TextBoxFor(x => x.item_remark, new { @class = "border text-gray-900 block w-full p-2.5", @id = "item_remark", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="weight_out_type" class="d-block mb-2">ประเภทการชั่ง</label>
                    @Html.TextBoxFor(x => x.weight_out_type, new { @class = "border text-gray-900 block w-full p-2.5", @id = "weight_out_type", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="car_license" class="d-block mb-2">ทะเบียนรถ</label>
                    @Html.TextBoxFor(x => x.car_license, new { @class = "border text-gray-900 block w-full p-2.5", @id = "car_license", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="weight_out_date" class="d-block mb-2">วันที่ชั่งออก</label>
                    @Html.TextBoxFor(x => x.weight_out_date, new { @class = "border text-gray-900 block w-full p-2.5", @id = "weight_out_date", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="company" class="d-block mb-2">รหัสบริษัท</label>
                    @Html.TextBoxFor(x => x.company, new { @class = "border text-gray-900 block w-full p-2.5", @id = "company", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="user_edit_1" class="d-block mb-2">ผู้แก้ไข 1</label>
                    @Html.TextBoxFor(x => x.user_edit_1, new { @class = "border text-gray-900 block w-full p-2.5", @id = "user_edit_1", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="user_edit_2" class="d-block mb-2">ผู้แก้ไข 2</label>
                    @Html.TextBoxFor(x => x.user_edit_2, new { @class = "border text-gray-900 block w-full p-2.5", @id = "user_edit_2", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="user_edit_3" class="d-block mb-2">ผู้แก้ไข 3</label>
                    @Html.TextBoxFor(x => x.user_edit_3, new { @class = "border text-gray-900 block w-full p-2.5", @id = "user_edit_3", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="sg_bg" class="d-block mb-2">SG BG</label>
                    @Html.TextBoxFor(x => x.sg_bg, new { @class = "border text-gray-900 block w-full p-2.5", @id = "sg_bg", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="sg_supplier" class="d-block mb-2">SG ผู้ส่ง</label>
                    @Html.TextBoxFor(x => x.sg_supplier, new { @class = "border text-gray-900 block w-full p-2.5", @id = "sg_supplier", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="api_bg" class="d-block mb-2">API BG</label>
                    @Html.TextBoxFor(x => x.api_bg, new { @class = "border text-gray-900 block w-full p-2.5", @id = "api_bg", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="api_supplier" class="d-block mb-2">API ผู้ส่ง</label>
                    @Html.TextBoxFor(x => x.api_supplier, new { @class = "border text-gray-900 block w-full p-2.5", @id = "api_supplier", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="temp_bg" class="d-block mb-2">Temp BG</label>
                    @Html.TextBoxFor(x => x.temp_bg, new { @class = "border text-gray-900 block w-full p-2.5", @id = "temp_bg", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="temp_supplier" class="d-block mb-2">Temp ผู้ส่ง</label>
                    @Html.TextBoxFor(x => x.temp_supplier, new { @class = "border text-gray-900 block w-full p-2.5", @id = "temp_supplier", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                        <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="remark_1" class="d-block mb-2">หมายเหตุ 1</label>
                    @Html.TextBoxFor(x => x.remark_1, new { @class = "border text-gray-900 block w-full p-2.5", @id = "remark_1", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="remark_2" class="d-block mb-2">หมายเหตุ 2</label>
                    @Html.TextBoxFor(x => x.remark_2, new { @class = "border text-gray-900 block w-full p-2.5", @id = "remark_2", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="document_def" class="d-block mb-2">เลขเอกสารผู้ส่ง</label>
                    @Html.TextBoxFor(x => x.document_def, new { @class = "border text-gray-900 block w-full p-2.5", @id = "document_def", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="weight_in_date" class="d-block mb-2">วันที่ชั่งเข้า</label>
                    @Html.TextBoxFor(x => x.weight_in_date, new { @class = "border text-gray-900 block w-full p-2.5", @id = "weight_in_date", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="user_id" class="d-block mb-2">ผู้ชั่ง</label>
                    @Html.TextBoxFor(x => x.user_id, new { @class = "border text-gray-900 block w-full p-2.5", @id = "user_id", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="document_po" class="d-block mb-2">เลขที่ PO</label>
                    @Html.TextBoxFor(x => x.document_po, new { @class = "border text-gray-900 block w-full p-2.5", @id = "document_po", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="doc_type_po" class="d-block mb-2">PO Type</label>
                    @Html.TextBoxFor(x => x.doc_type_po, new { @class = "border text-gray-900 block w-full p-2.5", @id = "doc_type_po", @maxlength = "50", @required = true, @disabled = "disabled", @readonly = true })
                </div>
                <div class="col-span-1 md:col-span-2 xl:col-span-1 mb-0">
                    <label for="weight_by_supplier" class="d-block mb-2">น้ำหนักที่ผู้ส่งวัด</label>
                    @Html.TextBoxFor(x => x.weight_by_supplier, new { @class = "border text-gray-900 block w-full p-2.5", @id = "weight_by_supplier", @maxlength = "50" })
                </div>
            </div>
        @*     <div class="flex flex-row items-center justify-center">
                @if (Model.mode == Constants.Mode.Created)
                {
                    <button type="button" id="btnRealSave" onclick="Save();" class="buttonAction w-150px primary-bg inline-flex justify-content-center items-center">เพิ่ม</button>
                }
                else
                {
                    <button type="button" id="btnRealSave" onclick="Save();" class="buttonAction w-150px primary-bg inline-flex justify-content-center items-center">บันทึก</button>
                }
            </div> *@
        </form>
    </div>
</div>

@section Scripts {
    <script>
        $("#before_weight_out").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_in").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_receive").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        $("#weight_by_supplier").on('blur change input', function () {
            $(this).val(function (i, input) {
                input = input.replace(/\D/g, '');
                return (input / 100).toFixed(2);
            });
        }).trigger('blur');

        // function Save() {
        //     var validFormMain = ValidateFormMain();
        //     if (validFormMain) {
        //         RealSaveInfo();
        //     }
        // }

        // function ValidateFormMain() {
        //     if (!$('#formMainItmR')[0].checkValidity()) {
        //         Swal.fire({
        //             title: 'คำเตือน',
        //             text: 'กรุณากรอกข้อมูลให้ครบถ้วน !',
        //             icon: 'error',
        //             showCancelButton: false,
        //             confirmButtonColor: '#3085d6',
        //             confirmButtonText: 'ตกลง',
        //             confirmButtonClass: 'd-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
        //             buttonsStyling: false,
        //         })
        //         return false;
        //     } else {
        //         return true;
        //     }
        // }

        // function RealSaveInfo() {
        //     var formData = $('#formMainItmR').serialize();
        //     Swal.fire({
        //         title: 'ยืนยันการบันทึกข้อมูล ?',
        //         text: '',
        //         icon: 'question',
        //         showCancelButton: true,
        //         confirmButtonColor: '#3085d6',
        //         cancelButtonColor: '#d33',
        //         confirmButtonText: 'ยืนยัน',
        //         cancelButtonText: 'ยกเลิก',
        //         confirmButtonClass: 'd-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
        //         cancelButtonClass: 'd-sm-inline-block btn btn-sm btn-outline-danger shadow-sm',
        //         buttonsStyling: false,
        //     }).then(function (result) {
        //         if (result.value) {
        //             $.ajax({
        //                 cache: false,
        //                 async: true,
        //                 type: "POST",
        //                 url: '@Url.Action("SaveItemMasterRelationInfo", "ItemMasterRelation")',
        //                 data: formData,
        //                 success: function (data) {
        //                     if (data.status == '@Constants.Result.Success') {
        //                         var timerInterval
        //                         Swal.fire({
        //                             title: 'บันทึกสำเร็จ !',
        //                             html: 'I will close in <strong></strong> seconds.',
        //                             timer: 750,
        //                             icon: "success",
        //                             showCancelButton: false, // There won't be any cancel button
        //                             showConfirmButton: false, // There won't be any confirm button
        //                             buttonsStyling: false,
        //                             onBeforeOpen: function () {
        //                                 Swal.showLoading()
        //                                 timerInterval = setInterval(function () {
        //                                     Swal.getContent().querySelector('strong')
        //                                         .textContent = Swal.getTimerLeft()
        //                                 }, 100)
        //                             },
        //                             onClose: function () {
        //                                 clearInterval(timerInterval)
        //                             }
        //                         }).then(function (result) {
        //                             if (
        //                                 // Read more about handling dismissals
        //                                 result.dismiss === Swal.DismissReason.timer
        //                             ) {
        //                                 console.log('หน้าต่างจะปิดในเวลา')
        //                                 GoToIndex();
        //                             }
        //                         })
        //                     } else if (data.status == '@Constants.Result.Invalid') {
        //                         Swal.fire({
        //                             icon: 'error',
        //                             title: 'คำเตือน',
        //                             text: data.message,
        //                             showCancelButton: false,
        //                             confirmButtonColor: '#3085d6',
        //                             confirmButtonText: 'ตกลง',
        //                             confirmButtonClass: 'd-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
        //                             buttonsStyling: false,
        //                         })
        //                     } else {
        //                         Swal.fire({
        //                             icon: 'error',
        //                             title: 'คำเตือน',
        //                             text: data.message,
        //                             showCancelButton: false,
        //                             confirmButtonColor: '#3085d6',
        //                             confirmButtonText: 'ตกลง',
        //                             confirmButtonClass: 'd-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
        //                             buttonsStyling: false,
        //                         })
        //                         toastr['error']('Fail - ' + data.message, 'Warning!', ErrOpt);
        //                     }
        //                 },
        //                 error: function (err) {
        //                     toastr['error']('Fail', 'Warning!', ErrOpt);
        //                 },
        //                 complete: function (data) {
        //                 }
        //             });
        //         }
        //     })
        // }

        function GoToIndex() {
            window.location.href = '@Url.Action("Index", "WeightHistory")';
        }
    </script>
}