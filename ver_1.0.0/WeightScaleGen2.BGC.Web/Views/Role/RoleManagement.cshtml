@using WeightScaleGen2.BGC.Web.Common;
@model WeightScaleGen2.BGC.Models.ViewModels.User.ResultSearchUserCriteria
@{
    ViewData["PageTitle"] = @ViewBag.MenuName;
}
@Html.AntiForgeryToken()
<div class="h-100">
    @* Header Section *@
    <div class="pageMenuTitle">
        <h3 class="text-black">จัดการตำแหน่งผู้ใช้งาน</h3>
    </div>

    <div id="dataContainerHeight" class="dataContainer">

        <div class="flex flex-row items-center justify-between mb-3 flex-wrap gap-2">
            <h4 class="dataTitle">จัดการตำแหน่งผู้ใช้งาน</h4>
            <div>
                <button type="button" id="btnCreate" onclick="CreateRoleManagement()" class="buttonAction primary-bg inline-flex items-center me-2">
                    @* <i class="fa-solid fa-upload me-2"></i> *@
                    <img src="~/icons/add.svg" class="" />
                    เพิ่ม
                </button>
                <button type="button" id="btnEdit" onclick="UpdateRoleManagement()" class="buttonAction edit-bg inline-flex items-center">
                    @* <i class="fa-solid fa-file-excel me-2"></i> *@
                    <img src="~/icons/edit.svg" class="" />
                    แก้ไข
                </button>
                <button type="button" id="btnDel" id="btnEdit" onclick="DeletedRoleManagement()" class="buttonAction eject-bg inline-flex items-center">
                    @* <i class="fa-solid fa-file-excel me-2"></i> *@
                    <img src="~/icons/delete.svg" class="" />
                    ลบ
                </button>
            </div>
        </div>

        @* Search Section *@
        <div class="w-full p-4 bg-white border border-gray-200 rounded-lg shadow-sm mb-2">
            <div class="grid grid-cols-1 gap-2 mb-2">
                <div>
                    <label for="inputRole" class="d-block mb-2">ตำแหน่ง</label>
                    @Html.DropDownListFor(x => x.role_dll,
                    Model.role_dll.Select(s => new SelectListItem()
                    {
                        Text = s.text,
                        Value = s.value,
                        Disabled = !s.is_active
                    }), new { @class = "border text-gray-900 block w-full p-2.5", id = "inputRoleId" })
                </div>
            </div>

            <div class="flex justify-content-center gap-2 flex-wrap">
                <button type="button" onclick="SearchRoleManagement()" class="buttonAction w-150px primary-bg inline-flex justify-content-center items-center">
                    <img src="~/icons/search.svg" class="" />ค้นหา
                </button>
            </div>

        </div>

        @* Table Section *@
        <div class="relative overflow-x-auto shadow-sm rounded-sm border border-gray-200 p-4">
            <table id="tableMenuItem" class="w-full text-md text-left rtl:text-right text-gray-700">
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>

        $(document).on('keypress',function(e) {
            if(e.which == 13) {
                SearchRoleManagement();
            }
        });

        $(document).ready(function () {
            $("#btn-search").click(function () {
                OpenSearch();
            });
            $("#search-header").click(function () {
                OpenSearch();
            });
        });

        function OpenSearch() {
            event.stopPropagation();
            $("#search-body").slideToggle("slow", function () {
                var isVisible = $(this).is(":visible");
                var iconClass = isVisible ? "fa-caret-up" : "fa-caret-down";
                $("#btn-search i").removeClass().addClass("fa-solid " + iconClass);
            });
        }

        $(function () {
            Swal.fire({
                title: 'รอสักครู่...',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading()
                },
            });
            SetPermssion()
            SearchRoleManagement();
            setTimeout(function () { Swal.close(); }, 1000);
        });

        function SetPermssion() {
            debugger;
            if ('@ViewBag.created' == 'N') {
                $('#btnCreate').hide();
            }

            if ('@ViewBag.edit' == 'N') {
                $('#btnUpdate').hide();
            }

            if ('@ViewBag.deleted' == 'N') {
                $('#btnDel').hide();
            }
        }

        function CreateRoleManagement() {
            var url = '@Url.Action("RoleInfo", "Role")' +
            '?mode=' + '@Constants.Mode.Created' +
            '&roleId=' + null;
            window.location.href = url;
        }

        function DeletedRoleManagement() {
            var roleId = $("#inputRoleId").val();
            Swal.fire({
                title: 'ยืนยันการลบข้อมูล ?',
                text: '',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'ยืนยัน',
                cancelButtonText: 'ยกเลิก',
                confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                cancelButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-danger shadow-sm ml-1',
                buttonsStyling: false,
            }).then(function (result) {
                if (result.value) {
                    $.ajax({
                        cache: false,
                        async: true,
                        type: "POST",
                        url: '@Url.Action("DeleteRole", "Role")',
                        data: { roleItemId: roleId },
                        success: function (data) {
                            if (data.status == '@Constants.Result.Success') {
                                var timerInterval
                                Swal.fire({
                                    title: 'ลบข้อมูลสำเร็จ !',
                                    html: 'I will close in <strong></strong> seconds.',
                                    timer: 750,
                                    icon: "success",
                                    showCancelButton: false, // There won't be any cancel button
                                    showConfirmButton: false, // There won't be any confirm button
                                    buttonsStyling: false,
                                    onBeforeOpen: function () {
                                        Swal.showLoading()
                                        timerInterval = setInterval(function () {
                                            Swal.getContent().querySelector('strong')
                                                .textContent = Swal.getTimerLeft()
                                        }, 100)
                                    },
                                    onClose: function () {
                                        clearInterval(timerInterval)
                                    }
                                }).then(function (result) {
                                    if (
                                        // Read more about handling dismissals
                                        result.dismiss === Swal.DismissReason.timer
                                    ) {
                                        console.log('หน้าต่างจะปิดในเวลา')
                                        clearModal();
                                        location.reload();
                                        SearchRoleManagement();
                                    }
                                })
                            } else if (data.status == '@Constants.Result.Invalid') {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'คำเตือน',
                                    text: data.message,
                                    showCancelButton: false,
                                    confirmButtonColor: '#3085d6',
                                    confirmButtonText: 'ตกลง',
                                    confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                    buttonsStyling: false,
                                })
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'คำเตือน',
                                    text: data.message,
                                    showCancelButton: false,
                                    confirmButtonColor: '#3085d6',
                                    confirmButtonText: 'ตกลง',
                                    confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                    buttonsStyling: false,
                                })
                                toastr['error']('Fail - ' + data.message, 'Warning!', ErrOpt);
                            }
                        },
                        error: function (err) {
                            toastr['error']('Fail', 'Warning!', ErrOpt);
                        },
                        complete: function (data) {
                        }
                    });
                }
            })
        }

        function UpdateRoleManagement() {
            var roleId = $("#inputRoleId");
            var url = '@Url.Action("RoleInfo", "Role")' +
            '?mode=' + '@Constants.Mode.Updated' +
            '&roleId=' + roleId.val();
            window.location.href = url;
        }

        function OnUpdate(role_item_id) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("UpdateSectionItem", "Role")',
                data: { roleItemId: role_item_id },
                success: function (data) {
                    if (data.status == '@Constants.Result.Success') {
                        SearchRoleManagement();
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'คำเตือน',
                            text: data.message,
                            showCancelButton: false,
                            confirmButtonColor: '#3085d6',
                            confirmButtonText: 'ตกลง',
                            confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                            buttonsStyling: false,
                        })
                        toastr['error']('Fail - ' + data.message, 'Warning!', ErrOpt);
                    }
                }
            });
        }

        function SearchRoleManagement() {
            Swal.fire({
                title: 'รอสักครู่...',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading()
                },
            });
            var ddlRole = $("#inputRoleId");
            var param = {};
            param.role_id = ddlRole.val();
            var htmlTable = "";
            $.ajax({
                type: "POST",
                url: '@Url.Action("SearchRoleManagement", "Role")',
                data: param,
                success: function (r) {
                    $("#tableMenuItem").empty();

                    htmlTable += '<table class="min-w-[1000px] w-full text-md text-left rtl:text-right text-gray-700 table-fixed" id="data-list">';

                    $.each(r, function (index, value) {
                        htmlTable += '</thead><tbody>';
                        htmlTable += '<tr class="border-b-1 border-gray-100">';

                        htmlTable += '<th class="w-2/8 mt-auto pt-2 ps-4 text-black-2 fw-500 text-sm">';
                        htmlTable += value.menu_name;
                        htmlTable += '</th>';

                        $.each(value.section, function (indexSection, valueSection) {

                            htmlTable += '<th class="pt-2 pb-3 text-black-2 fw-500 w-1/8 whitespace-nowrap text-sm">';
                            htmlTable += valueSection.menu_section_name_display;
                            htmlTable += '<div class="role-item" role-item-id="' + valueSection.role_item_id + '"><div class="btn-group btn-group-toggle" data-toggle="buttons">';
                            if (valueSection.is_action) {
                                htmlTable += '<div class="RoleCheckboxContainer">';
                                htmlTable += '<input type="checkbox" class="RoleCheckbox" id="RoleCheckbox' + valueSection.role_item_id + '" onclick="OnUpdate(' + '\'' + valueSection.role_item_id + '\'' + ')">';
                                htmlTable += '<label class="RoleCheckboxSwitch" for="RoleCheckbox' + valueSection.role_item_id + '">';
                                htmlTable += '<span class="RoleCheckboxSlider"></span>';
                                htmlTable += '</label>';
                                htmlTable += '</div>';

                                //htmlTable += '<div class="flex flex-row items-center justify-center gap-2">';
                                //htmlTable += '<button type="button" onclick="OnUpdate(' + '\'' + valueSection.role_item_id + '\'' + ')" class="buttonAction actionIconButton primary-bg"><lord-icon src="https://cdn.lordicon.com/wjogzler.json" trigger="hover" stroke="bold" colors="primary:#ffffff"style="width:20px;height:20px"></lord-icon></button>';
                                //htmlTable += '<button type="button" onclick="OnUpdate(' + '\'' + valueSection.role_item_id + '\'' + ')" class="buttonAction actionIconButton lightWhite-bg"><lord-icon src="https://cdn.lordicon.com/ilzotttq.json" trigger="hover" stroke="bold" colors="primary:#4741A6" style="width:20px;height:20px"></lord-icon></button>';
                                //htmlTable += '</div>';

                                //htmlTable += '<label class="d-none d-sm-inline-block btn btn-sm btn-outline-danger shadow-sm">';
                                // htmlTable += '<input type="radio" onchange="OnUpdate(' + '\'' + valueSection.role_item_id + '\'' + ')" name="options' + valueSection.role_item_id + '" id="onv' + valueSection.role_item_id + '">off</label>';

                                // htmlTable += '<label class="d-none d-sm-inline-block btn btn-sm btn-outline-success shadow-sm active">';
                                // htmlTable += '<input type="radio" onchange="OnUpdate(' + '\'' + valueSection.role_item_id + '\'' + ')" name="options' + valueSection.role_item_id + '" id="ov' + valueSection.role_item_id + '" checked>on</label>';
                            } else {
                                htmlTable += '<div class="RoleCheckboxContainer RolePause">';
                                htmlTable += '<input type="checkbox" class="RoleCheckbox" id="RoleCheckbox' + valueSection.role_item_id + '" onclick="OnUpdate(' + '\'' + valueSection.role_item_id + '\'' + ')">';
                                htmlTable += '<label class="RoleCheckboxSwitch" for="RoleCheckbox' + valueSection.role_item_id + '">';
                                htmlTable += '<span class="RoleCheckboxSlider"></span>';
                                htmlTable += '</label>';
                                htmlTable += '</div>';

                                //htmlTable += '<div class="flex flex-row items-center justify-center gap-2">';
                                //htmlTable += '<button type="button" onclick="OnUpdate(' + '\'' + valueSection.role_item_id + '\'' + ')" class="buttonAction actionIconButton primary-bg"><lord-icon src="https://cdn.lordicon.com/wjogzler.json" trigger="hover" stroke="bold" colors="primary:#ffffff"style="width:20px;height:20px"></lord-icon></button>';
                                //htmlTable += '<button type="button" onclick="OnUpdate(' + '\'' + valueSection.role_item_id + '\'' + ')" class="buttonAction actionIconButton lightWhite-bg"><lord-icon src="https://cdn.lordicon.com/ilzotttq.json" trigger="hover" stroke="bold" colors="primary:#4741A6" style="width:20px;height:20px"></lord-icon></button>';
                                //htmlTable += '</div>';

                                // htmlTable += '<label class="d-none d-sm-inline-block btn btn-sm btn-outline-danger shadow-sm active">';
                                // htmlTable += '<input type="radio" onchange="OnUpdate(' + '\'' + valueSection.role_item_id + '\'' + ')" name="options' + valueSection.role_item_id + '" id="onv' + valueSection.role_item_id + '" checked">off</label>';

                                // htmlTable += '<label class="d-none d-sm-inline-block btn btn-sm btn-outline-success shadow-sm">';
                                // htmlTable += '<input type="radio" onchange="OnUpdate(' + '\'' + valueSection.role_item_id + '\'' + ')" name="options' + valueSection.role_item_id + '" id="ov' + valueSection.role_item_id + '">on</label>';
                            }
                            htmlTable += '</div></div></th>';

                        });
                        htmlTable += '</tr>';
                    });

                    htmlTable += '</tbody></table>';

                    $("#tableMenuItem").append(htmlTable);
                }
            });
            setTimeout(function () { Swal.close(); }, 1000);
        }

    </script>
}