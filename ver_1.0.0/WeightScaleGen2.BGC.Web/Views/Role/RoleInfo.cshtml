@using WeightScaleGen2.BGC.Web.Common;
@model WeightScaleGen2.BGC.Models.ViewModels.Role.ResultRoleInfo;
@{
    ViewData["PageTitle"] = @ViewBag.MenuName;
}
@Html.AntiForgeryToken()
<div class="h-100">
    @* Header Section *@
    <div class="pageMenuTitle">
        @if (Model.mode == Constants.Mode.Created)
        {
            <h3 class="text-black">เพิ่มตำแหน่งผู้ใช้งาน</h3>
        }
        else
        {
            <h3 class="text-black">แก้ไขข้อมูลตำแหน่งผู้ใช้งาน<br />: @Model.role_name</h3>
        }
    </div>

    <div id="dataContainerHeight" class="dataContainer">
        <div class="flex flex-row items-center justify-start mb-3">
            <div>
                <button type="button" onclick="GoToIndex();" class="buttonAction primary-bg inline-flex items-center mr-3">
                    <lord-icon src="https://cdn.lordicon.com/jzzzcrxv.json" trigger="hover" stroke="bold" colors="primary:#ffffff,secondary:#ffffff" style="width:20px;height:20px" class="mr-2"></lord-icon>
                    กลับ
                </button>
            </div>

            @if (Model.mode == Constants.Mode.Created)
            {
                <h4 class="dataTitle">เพิ่มตำแหน่งผู้ใช้งาน</h4>
            }
            else
            {
                <h4 class="dataTitle">แก้ไขข้อมูลตำแหน่งผู้ใช้งาน<br />: @Model.role_name</h4>
            }

        </div>
        <form id="formModalRole" class="needs-validation" novalidate>
            @Html.HiddenFor(x => x.mode, new { @id = "mode" })
            @Html.HiddenFor(x => x.role_id, new { @id = "role_id" })
            <div class="space-y-4">
                <div class="">
                    <label for="role_name" class="d-block mb-2">Role Name</label>
                    @Html.TextBoxFor(x => x.role_name, new { @class = "border text-gray-900 block w-full p-2.5", @id = "role_name", @maxlength = "50", @required = true })
                </div>
                <div class="">
                    <label for="role_desc" class="d-block mb-2">Description</label>
                    @Html.TextAreaFor(x => x.role_desc, new { @class = "border text-gray-900 block w-full p-2.5 rounded-sm", @maxlength = "255", @id = "role_desc", @rows = 10 })
                </div>
            </div>
            <div class="flex justify-content-center mt-12 mb-6">
                @if (Model.mode == Constants.Mode.Created)
                {
                    <button type="button" id="btnRealSave" onclick="SaveRoleItem();" class="buttonAction w-180px primary-bg inline-flex justify-content-center items-center">เพิ่ม</button>
                }
                else
                {
                    <button type="button" id="btnRealSave" onclick="SaveRoleItem();" class="buttonAction w-180px primary-bg inline-flex justify-content-center items-center">บันทึก</button>
                }
            </div>
        </form>
    </div>
</div>

<script>

    $(function () {
        BindControl();
    });

    function SaveRoleItem() {
        var validFormModal = ValidateFormModal();
        if (validFormModal) {
            RealSaveRoleItem();
        }
    }

    function BindControl() {
    }

    function ValidateFormModal() {
        if (!$('#formModalRole')[0].checkValidity()) {
            document.getElementsByClassName('needs-validation').formModalRole.classList.add('was-validated');
            Swal.fire({
                title: 'คำเตือน',
                text: 'กรุณากรอกข้อมูลให้ครบถ้วน !',
                icon: 'error',
                showCancelButton: false,
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'ตกลง',
                confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                buttonsStyling: false,
            })
            return false;
        } else {
            return true;
        }
    }

    function RealSaveRoleItem() {
        var formData = $('#formModalRole').serialize();
        Swal.fire({
            title: 'ยืนยันการบันทึกข้อมูล ?',
            text: '',
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'ยืนยัน',
            cancelButtonText: 'ยกเลิก',
            confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
            cancelButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-danger shadow-sm ml-1',
            buttonsStyling: false,
        }).then(function (result) {
            if (result.value) {
                $.ajax({
                    cache: false,
                    async: true,
                    type: "POST",
                    url: '@Url.Action("SaveRole", "Role")',
                    data: formData,
                    success: function (data) {
                        if (data.status == '@Constants.Result.Success') {
                            var timerInterval
                            Swal.fire({
                                title: 'บันทึกสำเร็จ !',
                                html: 'I will close in <strong></strong> seconds.',
                                timer: 750,
                                icon: "success",
                                showCancelButton: false, // There won't be any cancel button
                                showConfirmButton: false, // There won't be any confirm button
                                buttonsStyling: false,
                                onBeforeOpen: function () {
                                    Swal.showLoading()
                                    timerInterval = setInterval(function () {
                                        Swal.getContent().querySelector('strong')
                                            .textContent = Swal.getTimerLeft()
                                    }, 100)
                                },
                                onClose: function () {
                                    clearInterval(timerInterval)
                                }
                            }).then(function (result) {
                                if (
                                    // Read more about handling dismissals
                                    result.dismiss === Swal.DismissReason.timer
                                ) {
                                    console.log('หน้าต่างจะปิดในเวลา')
                                    GoToIndex();
                                }
                            })
                        } else if (data.status == '@Constants.Result.Invalid') {
                            Swal.fire({
                                icon: 'error',
                                title: 'คำเตือน',
                                text: data.message,
                                showCancelButton: false,
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: 'ตกลง',
                                confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                buttonsStyling: false,
                            })
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'คำเตือน',
                                text: data.message,
                                showCancelButton: false,
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: 'ตกลง',
                                confirmButtonClass: 'd-none d-sm-inline-block btn btn-sm btn-outline-primary shadow-sm',
                                buttonsStyling: false,
                            })
                            toastr['error']('Fail - ' + data.message, 'Warning!', ErrOpt);
                        }
                    },
                    error: function (err) {
                        toastr['error']('Fail', 'Warning!', ErrOpt);
                    },
                    complete: function (data) {
                    }
                });
            }
        })
    }

    function GoToIndex() {
        window.location.href = '@Url.Action("RoleManagement", "Role")';
    }
</script>